{"version":3,"sources":["x-date-core.js"],"names":["xDateCore","Config","isUtc","monthDirection","daysDirection","yearsDirection","defaultYearsCount","daysList","monthList","CommonUtils","isValidNumber","num","isNumber","isNaN","parseFloat","isNotInfinity","isFinite","getArrayOfNumbers","start","end","this","isReverse","targetLength","arr","Array","newArr","apply","result","map","d","n","reverse","intArraySort","direction","desc","a","b","DESC","sort","DataClass","DateUtils","YearsUtils","MonthUtils","DaysUtils","DateModel","LimitsModel","_getSelected","model","isUpperStart","dt","isEqualStart","isLowerEnd","isEqualEnd","Date","getTime","_data","_start","_end","_limitDates","exports","selected","list","y","m","reloadYearsList","selectedYear","getYear","startYear","endYear","getYearsList","limitsModel","now","reloadMonthList","startMonth","getMonth","endMonth","getMonthList","reloadDaysList","selectedMonth","getDaysList","Number","getDay","dow","getDayOfWeek","tz","getTimezoneOffset","getVal","method","date","call","prototype","getUTCDate","getDate","getUTCDay","getUTCFullYear","getFullYear","getUTCMonth","getDaysInMonth","month","year","isValidModel","isDateUpperStartLimit","isDateLowerEndLimit","isDateBetweenLimits","startDt","endDt","START_DAY","lastDayInMonth","isYearOfLowerLimit","isYearOfUpperLimit","isMonthOfLowerLimit","isMonthOfUpperLimit","isLowerLimit","isUpperLimit","_setStart","_setEnd","_setNow","START_MONTH","END_MONTH","_getLatestPossibleYear","yearsCount","_getFirstPossibleYear","_getRangeValues","nowYear","YEARS_COUNT","latestPossibleYear","firstPossibleYear","statement","isBoth","isBothNot","isOnlyStart","isOnlyEnd","isStartLower","isEndLower","isStartEqualEnd","isEndUpperNow","isEndEqualNow","from","to","range"],"mappings":"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","file":"x-date-core.min.js","sourcesContent":["var xDateCore = (function() {\n  'use strict';\n\n  return {\n    Config: {\n      isUtc: false,\n      monthDirection: 'asc',\n      daysDirection: 'asc',\n      yearsDirection: 'desc',\n      defaultYearsCount: 50,\n      daysList: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      monthList: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    },\n\n    CommonUtils: {\n      isValidNumber: function(num) {\n        var isNumber = !isNaN(parseFloat(num));\n        var isNotInfinity = isFinite(num);\n        return isNumber && isNotInfinity;\n      },\n      getArrayOfNumbers: function(start, end) {\n        //TODO (S.Panfilov) check this in after build\n        //if (!exports.isValidNumber(start) || !exports.isValidNumber(end)) return [];\n        if (!this.isValidNumber(start) || !this.isValidNumber(end)) return [];\n\n        var isReverse = (start > end);\n        var targetLength = isReverse ? (start - end) + 1 : (end - start) + 1;\n        var arr = new Array(targetLength);\n        var newArr = Array.apply(null, arr);\n        var result = newArr.map(function(d, n) {\n          return (isReverse) ? n + end : n + start;\n        });\n\n        return (isReverse) ? result.reverse() : result;\n      },\n      intArraySort: function(arr, direction) {\n        var DESC = 'desc';\n\n        function desc(a, b) {\n          return b - a;\n        }\n\n        switch (direction) {\n          default: return arr.sort(function(a, b) {\n            return a - b;\n          });\n          case DESC:\n              return arr.sort(desc);\n        }\n      }\n    },\n\n    DataClass:\n      (function(DateUtils, CommonUtils, YearsUtils, MonthUtils, DaysUtils, DateModel, LimitsModel) {\n\n        function _getSelected(model, start, end) {\n          var result;\n\n          var isUpperStart = (model.dt > start);\n          var isEqualStart = (model.dt === start);\n          var isLowerEnd = (model.dt > end);\n          var isEqualEnd = (model.dt === end);\n\n          //start == 1; model == 1 or 2 or 3; end == 3;\n          if ((isUpperStart || isEqualStart) || (isLowerEnd || isEqualEnd)) {\n            result = new DateModel(model.dt);\n          } else if (!isUpperStart) { //start == 1; model == 0\n            result = new DateModel(start);\n          } else if (!isUpperStart) { //model == 4; end == 3;\n            result = new DateModel(end);\n          } else { //paranoid case\n            result = new DateModel(new Date().getTime());\n          }\n\n          return result;\n        }\n\n        return function(model, start, end) {\n\n          var _data = {\n            _start: null,\n            _end: null,\n            _limitDates: null\n          };\n\n          var exports = {\n            selected: {},\n            list: {\n              y: null,\n              m: null,\n              d: null\n            },\n            reloadYearsList: function() {\n              var selectedYear = DateUtils.getYear(exports.selected.dt);\n              var startYear = DateUtils.getYear(_data._start);\n              var endYear = DateUtils.getYear(_data._end);\n              //exports.list.y = YearsUtils.getYearsList(selectedYear, _data._start, _data._end, _data.limitsModel.now.y);\n              exports.list.y = YearsUtils.getYearsList(selectedYear, startYear, endYear, _data.limitsModel.now.y);\n              return this;\n            },\n            reloadMonthList: function() {\n              var selectedYear = DateUtils.getYear(exports.selected.dt);\n              var startMonth = DateUtils.getMonth(_data._start);\n              var endMonth = DateUtils.getMonth(_data._end);\n              exports.list.m = MonthUtils.getMonthList(startMonth, endMonth, selectedYear, _data.limitsModel);\n              return this;\n            },\n            reloadDaysList: function() {\n              var selectedYear = DateUtils.getYear(exports.selected.dt);\n              var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n              exports.list.d = DaysUtils.getDaysList(_data._start, _data._end, selectedYear, selectedMonth, _data.limitsModel);\n              return this;\n            }\n          };\n\n          model.dt = CommonUtils.isValidNumber(model.dt) ? model.dt : null;\n          start = CommonUtils.isValidNumber(start) ? start : null;\n          end = CommonUtils.isValidNumber(end) ? end : null;\n\n          exports.selected = _getSelected(model, start, end);\n          var selectedYear = DateUtils.getYear(exports.selected.dt);\n          var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n\n          _data.limitsModel = new LimitsModel(start, end);\n          _data._start = start;\n          _data._end = end;\n\n          exports.list.y = YearsUtils.getYearsList(selectedYear, _data.limitsModel.start.y, _data.limitsModel.end.y, _data.limitsModel.now.y);\n          exports.list.m = MonthUtils.getMonthList(start, end, selectedYear, _data.limitsModel);\n          exports.list.d = DaysUtils.getDaysList(start, end, selectedYear, selectedMonth, _data.limitsModel);\n\n          return exports;\n        }\n      })(this.DateUtils, this.CommonUtils, this.YearsUtils, this.MonthUtils, this.DaysUtils, this.DateModel, this.LimitsModel),\n\n    DateModel:\n      (function(DateUtils) {\n        return function DateModel(dt) {\n          if (!dt || Number.isNaN(+dt) || !Number.isFinite(+dt)) throw 'NaN or null';\n          this.d = DateUtils.getDay(+dt);\n          this.dow = DateUtils.getDayOfWeek(+dt);\n          this.m = DateUtils.getMonth(+dt);\n          this.y = DateUtils.getYear(+dt);\n          this.dt = +dt;\n          this.tz = new Date(+dt).getTimezoneOffset();\n\n          return this;\n        };\n      })(this.DateUtils),\n\n    DateUtils:\n      (function(Config) {\n\n        function getVal(dt, method) {\n          var date = new Date(+dt);\n          return (date && method) ? method.call(date) : null;\n        }\n\n        var exports = {\n          getDay: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return getVal(dt, method);\n          },\n          getDayOfWeek: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (Config.isUtc) ? Date.prototype.getUTCDay : Date.prototype.getDay;\n            return getVal(dt, method);\n          },\n          getYear: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (Config.isUtc) ? Date.prototype.getUTCFullYear : Date.prototype.getFullYear;\n            return getVal(dt, method);\n          },\n          getMonth: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (Config.isUtc) ? Date.prototype.getUTCMonth : Date.prototype.getMonth;\n            return getVal(dt, method);\n          },\n          getDaysInMonth: function(month, year) {\n            var method = (Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return method.call(new Date(+year, (+month) + 1, 0));\n          },\n          isValidModel: function(model) {\n            return !!model && (!!model.dt || model.dt === 0) && !Number.isNaN(+model.dt) && Number.isFinite(+model.dt);\n          },\n          isDateUpperStartLimit: function(dt, start) {\n            if (!start) return true;\n            //TODO (S.Panfilov) should be a const\n            if ((!dt && dt !== 0) || Number.isNaN(+dt) || Number.isNaN(+start)) throw 'NaN or null';\n            //TODO (S.Panfilov) may be (+dt >= +end)\n            return (+dt > +start);\n          },\n          isDateLowerEndLimit: function(dt, end) {\n            if (!end) return true;\n            //TODO (S.Panfilov) should be a const\n            if (Number.isNaN(+dt) || Number.isNaN(+end)) throw 'NaN or null';\n            //TODO (S.Panfilov) may be (+dt <= +end)\n            return (+dt < +end);\n          },\n          isDateBetweenLimits: function(dt, start, end) {\n            //TODO (S.Panfilov) lowerAndEqual and UpperAndEqual?\n            return (exports.isDateUpperStartLimit(dt, start) && exports.isDateLowerEndLimit(dt, end));\n          }\n        };\n\n\n        return exports;\n      })(this.Config),\n\n    DaysUtils:\n      (function(DateUtils, CommonUtils, Config) {\n        return {\n          getDaysList: function(startDt, endDt, year, month, limitsModel) {\n            var result;\n            var START_DAY = 1;\n            var lastDayInMonth = DateUtils.getDaysInMonth(month, year);\n\n            if (startDt || endDt) {\n              var isYearOfLowerLimit = (startDt) ? limitsModel.start.y === year : false;\n              var isYearOfUpperLimit = (endDt) ? limitsModel.end.y === year : false;\n              var isMonthOfLowerLimit = (startDt) ? limitsModel.start.m === month : false;\n              var isMonthOfUpperLimit = (endDt) ? limitsModel.end.m === month : false;\n\n              var isLowerLimit = (isYearOfLowerLimit && isMonthOfLowerLimit);\n              var isUpperLimit = (isYearOfUpperLimit && isMonthOfUpperLimit);\n\n              var start = (startDt) ? limitsModel.start.d : START_DAY;\n              var end = (endDt) ? limitsModel.end.d : lastDayInMonth;\n\n              if (isLowerLimit && isUpperLimit) {\n                result = CommonUtils.getArrayOfNumbers(start, end);\n              } else if (isLowerLimit && !isUpperLimit) {\n                result = CommonUtils.getArrayOfNumbers(start, lastDayInMonth);\n              } else if (!isLowerLimit && isUpperLimit) {\n                result = CommonUtils.getArrayOfNumbers(START_DAY, end);\n              } else { // in all other cases return array of 12 month\n                result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n              }\n            } else { // in all other cases return array of 12 month\n              result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n            }\n\n            return CommonUtils.intArraySort(result, Config.daysDirection);\n          }\n        };\n      })(this.DateUtils, this.CommonUtils, this.Config),\n\n    LimitsModel:\n      (function(DateUtils) {\n        return function LimitsModel(start, end) {\n\n          var exports = {\n            start: {},\n            end: {},\n            now: {}\n          };\n\n          function _setStart(dt) {\n            exports.start.d = DateUtils.getDay(+dt);\n            exports.start.m = DateUtils.getMonth(+dt);\n            exports.start.y = DateUtils.getYear(+dt);\n            exports.start.dt = +dt;\n            //TODO (S.Panfilov) Possible strict violation\n            return this;\n          }\n\n          function _setEnd(dt) {\n            exports.end.d = DateUtils.getDay(+dt);\n            exports.end.m = DateUtils.getMonth(+dt);\n            exports.end.y = DateUtils.getYear(+dt);\n            exports.end.dt = +dt;\n            //TODO (S.Panfilov) Possible strict violation\n            return this;\n          }\n\n          function _setNow() {\n            var dt = new Date().getTime();\n            exports.now.d = DateUtils.getDay(dt);\n            exports.now.m = DateUtils.getMonth(dt);\n            exports.now.y = DateUtils.getYear(dt);\n            exports.now.dt = dt;\n            //TODO (S.Panfilov) Possible strict violation\n            return this;\n          }\n\n          if (start) _setStart(start);\n          if (end) _setEnd(end);\n          _setNow();\n\n\n          return exports;\n        };\n      })(this.DateUtils),\n\n    MonthUtils:\n      (function(CommonUtils, Config) {\n        return {\n          getMonthList: function(startDt, endDt, selectedYear, limitsModel) {\n            var result;\n            var START_MONTH = 0;\n            var END_MONTH = 11;\n\n            if (startDt || endDt) {\n              var isYearOfLowerLimit = (startDt) ? limitsModel.start.y === selectedYear : false;\n              var isYearOfUpperLimit = (endDt) ? limitsModel.end.y === selectedYear : false;\n              var start = (startDt) ? limitsModel.start.m : START_MONTH;\n              var end = (endDt) ? limitsModel.end.m : END_MONTH;\n\n              // startYear == 2015, nowYear == 2015, endYear == 2015\n              if (isYearOfLowerLimit && isYearOfUpperLimit) {\n                result = CommonUtils.getArrayOfNumbers(start, end);\n              } else if (isYearOfLowerLimit && !isYearOfUpperLimit) { // startYear == 2015, nowYear == 2015, endYear == 2016 (or null)\n                result = CommonUtils.getArrayOfNumbers(start, END_MONTH);\n              } else if (!isYearOfLowerLimit && isYearOfUpperLimit) { // startYear == 2014 (or null), nowYear == 2015, endYear == 2015\n                result = CommonUtils.getArrayOfNumbers(START_MONTH, end);\n              } else { // in all other cases return array of 12 month\n                result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n              }\n            } else { // in all other cases return array of 12 month\n              result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n            }\n\n            return CommonUtils.intArraySort(result, Config.monthDirection);\n          }\n        };\n      })(this.CommonUtils, this.Config),\n\n    YearsUtils:\n      (function(CommonUtils, Config) {\n\n        function _getLatestPossibleYear(yearsCount, selectedYear, now) {\n          var result = (selectedYear > now) ? selectedYear : now;\n          result += (yearsCount - 1);\n          return result;\n        }\n\n        function _getFirstPossibleYear(yearsCount, selectedYear, now) {\n          var result = (selectedYear < now) ? selectedYear : now;\n          result -= (yearsCount - 1);\n          return result;\n        }\n\n        function _getRangeValues(selectedYear, startYear, endYear, nowYear) {\n\n          var YEARS_COUNT = Config.defaultYearsCount;\n          var latestPossibleYear = _getLatestPossibleYear(YEARS_COUNT, selectedYear, nowYear);\n          var firstPossibleYear = _getFirstPossibleYear(YEARS_COUNT, selectedYear, nowYear);\n\n          var statement = {\n            isBoth: !!(startYear && endYear),\n            isBothNot: !!(!startYear && !endYear),\n            isOnlyStart: !!(startYear && !endYear),\n            isOnlyEnd: !!(!startYear && endYear),\n            isStartLower: (startYear < endYear),\n            isEndLower: (startYear > endYear),\n            isStartEqualEnd: (startYear === endYear),\n            isEndUpperNow: (endYear > nowYear),\n            isEndEqualNow: (endYear === nowYear)\n          };\n\n          //start = 2011, end = 2014\n          if (statement.isBoth && statement.isStartLower) {\n            return {\n              from: startYear,\n              to: endYear\n            };\n          }\n\n          //start = 2014, end = 2011\n          if (statement.isBoth && statement.isEndLower) {\n            return {\n              from: endYear,\n              to: startYear\n            };\n          }\n\n          //start = 2011, end = 2011\n          if (statement.isBoth && statement.isStartEqualEnd) {\n            return {\n              from: startYear,\n              to: endYear\n            };\n          }\n\n          //start = 2014, end = null\n          if (statement.isOnlyStart) {\n            return {\n              from: startYear,\n              to: latestPossibleYear\n            };\n          }\n\n          //start = null, end = 2014\n          if (statement.isOnlyEnd) {\n            //start = null, now = 2013 (or 2014), end = 2014\n            if (statement.isEndUpperNow || statement.isEndEqualNow) {\n              //TODO (S.Panfilov) wtf? I cannot remember wtf this statement check\n              if ((firstPossibleYear - YEARS_COUNT) > (endYear - YEARS_COUNT)) {\n                return {\n                  from: firstPossibleYear,\n                  to: endYear\n                };\n              } else {\n                return {\n                  from: endYear - (YEARS_COUNT - 1),\n                  to: endYear\n                };\n              }\n            }\n\n            //start = null, now = 2015,  end = 2014\n            if (!statement.isEndUpperNow) {\n              return {\n                from: endYear - (YEARS_COUNT - 1),\n                to: endYear\n              };\n            }\n          }\n\n          //start = null, end = null\n          if (statement.isBothNot) {\n            return {\n              from: firstPossibleYear,\n              to: latestPossibleYear\n            };\n          }\n        }\n\n        var exports = {\n          getYearsList: function(selectedYear, startYear, endYear, nowYear) {\n            var range = _getRangeValues(selectedYear, startYear, endYear, nowYear);\n            var result = CommonUtils.getArrayOfNumbers(range.from, range.to);\n\n            return CommonUtils.intArraySort(result, Config.yearsDirection);\n          }\n        };\n\n\n        return exports;\n      })(this.CommonUtils, this.Config)\n  };\n})();"],"sourceRoot":"/source/"}