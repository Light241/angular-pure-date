{"version":3,"sources":["x-date-core.js"],"names":["xDateCore","Config","isUtc","monthDirection","daysDirection","yearsDirection","defaultYearsCount","daysList","monthList","CommonUtils","exports","isValidNumber","num","isNumber","isNaN","parseFloat","isNotInfinity","isFinite","getArrayOfNumbers","start","end","isReverse","targetLength","arr","Array","newArr","apply","result","map","d","n","reverse","intArraySort","direction","desc","a","b","DESC","sort","DateUtils","getVal","dt","method","date","Date","call","getDay","prototype","getUTCDate","getDate","getDayOfWeek","getUTCDay","getYear","getUTCFullYear","getFullYear","getMonth","getUTCMonth","getDaysInMonth","month","year","isValidModel","model","Number","isDateUpperStartLimit","isDateLowerEndLimit","isDateBetweenLimits","LimitsModel","_setStart","m","y","this","_setEnd","_setNow","getTime","now","DateModel","dow","tz","getTimezoneOffset","YearsUtils","_getLatestPossibleYear","yearsCount","selectedYear","_getFirstPossibleYear","_getRangeValues","startYear","endYear","nowYear","YEARS_COUNT","latestPossibleYear","firstPossibleYear","statement","isBoth","isBothNot","isOnlyStart","isOnlyEnd","isStartLower","isEndLower","isStartEqualEnd","isEndUpperNow","isEndEqualNow","from","to","getYearsList","range","MonthUtils","getMonthList","startDt","endDt","limitsModel","START_MONTH","END_MONTH","isYearOfLowerLimit","isYearOfUpperLimit","DaysUtils","getDaysList","START_DAY","lastDayInMonth","isMonthOfLowerLimit","isMonthOfUpperLimit","isLowerLimit","isUpperLimit","DataClass","_getSelected","isUpperStart","isEqualStart","isLowerEnd","isEqualEnd","_data","_start","_end","_limitDates","selected","list","reloadYearsList","reloadMonthList","startMonth","endMonth","reloadDaysList","selectedMonth"],"mappings":"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","file":"x-date-core.min.js","sourcesContent":["var xDateCore = (function () {\n\r    return {\n\r  //==============================================\n\n  Config: function () {\n    'use strict';\n\n    return {\n      isUtc: false,\n      monthDirection: 'asc',\n      daysDirection: 'asc',\n      yearsDirection: 'desc',\n      defaultYearsCount: 50,\n      daysList: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n      monthList: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    };\n  },\n\n\n  //==============================================\n  //==============================================\n\n  CommonUtils: function () {\n    'use strict';\n\n    var exports = {\n      isValidNumber: function (num) {\n        var isNumber = !isNaN(parseFloat(num));\n        var isNotInfinity = isFinite(num);\n        return isNumber && isNotInfinity;\n      },\n      getArrayOfNumbers: function (start, end) {\n        if (!exports.isValidNumber(start) || !exports.isValidNumber(end)) return [];\n\n        var isReverse = (start > end);\n        var targetLength = isReverse ? (start - end) + 1 : (end - start ) + 1;\n        var arr = new Array(targetLength);\n        var newArr = Array.apply(null, arr);\n        var result = newArr.map(function (d, n) {\n          return (isReverse) ? n + end : n + start;\n        });\n\n        return (isReverse) ? result.reverse() : result;\n      },\n      intArraySort: function (arr, direction) {\n        var DESC = 'desc';\n\n        function desc(a, b) {\n          return b - a;\n        }\n\n        switch (direction) {\n          default:\n            return arr.sort(function (a, b) {\n              return a - b;\n            });\n          case DESC:\n            return arr.sort(desc);\n        }\n      }\n    };\n\n    return exports;\n  },\n\n//==============================================\n  //==============================================\n\n  DateUtils: function (Config) {\n    'use strict';\n\n    function getVal(dt, method) {\n      var date = new Date(+dt);\n      return (date && method) ? method.call(date) : null;\n    }\n\n    var exports = {\n      getDay: function (dt) {\n        if (!dt && dt !== 0) return null;\n        var method = (Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n        return getVal(dt, method);\n      },\n      getDayOfWeek: function (dt) {\n        if (!dt && dt !== 0) return null;\n        var method = (Config.isUtc) ? Date.prototype.getUTCDay : Date.prototype.getDay;\n        return getVal(dt, method);\n      },\n      getYear: function (dt) {\n        if (!dt && dt !== 0) return null;\n        var method = (Config.isUtc) ? Date.prototype.getUTCFullYear : Date.prototype.getFullYear;\n        return getVal(dt, method);\n      },\n      getMonth: function (dt) {\n        if (!dt && dt !== 0) return null;\n        var method = (Config.isUtc) ? Date.prototype.getUTCMonth : Date.prototype.getMonth;\n        return getVal(dt, method);\n      },\n      getDaysInMonth: function (month, year) {\n        var method = (Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n        return method.call(new Date(+year, (+month) + 1, 0));\n      },\n      isValidModel: function (model) {\n        return !!model && (!!model.dt || model.dt === 0) && !Number.isNaN(+model.dt) && Number.isFinite(+model.dt);\n      },\n      isDateUpperStartLimit: function (dt, start) {\n        if (!start) return true;\n        //TODO (S.Panfilov) should be a const\n        if ((!dt && dt !== 0) || Number.isNaN(+dt) || Number.isNaN(+start)) throw 'NaN or null';\n        //TODO (S.Panfilov) may be (+dt >= +end)\n        return (+dt > +start);\n      },\n      isDateLowerEndLimit: function (dt, end) {\n        if (!end) return true;\n        //TODO (S.Panfilov) should be a const\n        if (Number.isNaN(+dt) || Number.isNaN(+end)) throw 'NaN or null';\n        //TODO (S.Panfilov) may be (+dt <= +end)\n        return (+dt < +end);\n      },\n      isDateBetweenLimits: function (dt, start, end) {\n        //TODO (S.Panfilov) lowerAndEqual and UpperAndEqual?\n        return (exports.isDateUpperStartLimit(dt, start) && exports.isDateLowerEndLimit(dt, end));\n      }\n    };\n\n\n    return exports;\n  },\n\n//==============================================\n  //==============================================\n\n  LimitsModel: function (DateUtils) {\n    'use strict';\n\n    function LimitsModel(start, end) {\n\n      var exports = {\n        start: {},\n        end: {},\n        now: {}\n      };\n\n      function _setStart(dt) {\n        exports.start.d = DateUtils.getDay(+dt);\n        exports.start.m = DateUtils.getMonth(+dt);\n        exports.start.y = DateUtils.getYear(+dt);\n        exports.start.dt = +dt;\n        //TODO (S.Panfilov) Possible strict violation\n        return this;\n      }\n\n      function _setEnd(dt) {\n        exports.end.d = DateUtils.getDay(+dt);\n        exports.end.m = DateUtils.getMonth(+dt);\n        exports.end.y = DateUtils.getYear(+dt);\n        exports.end.dt = +dt;\n        //TODO (S.Panfilov) Possible strict violation\n        return this;\n      }\n\n      function _setNow() {\n        var dt = new Date().getTime();\n        exports.now.d = DateUtils.getDay(dt);\n        exports.now.m = DateUtils.getMonth(dt);\n        exports.now.y = DateUtils.getYear(dt);\n        exports.now.dt = dt;\n        //TODO (S.Panfilov) Possible strict violation\n        return this;\n      }\n\n      if (start) _setStart(start);\n      if (end) _setEnd(end);\n      _setNow();\n\n\n      return exports;\n    }\n\n    return LimitsModel;\n  },\n  //==============================================\n\n  DateModel: function (DateUtils) {\n    'use strict';\n\n    function DateModel(dt) {\n      //TODO (S.Panfilov) throwed error must be a const\n      if (!dt || Number.isNaN(+dt) || !Number.isFinite(+dt)) throw 'NaN or null';\n      this.d = DateUtils.getDay(+dt);\n      this.dow = DateUtils.getDayOfWeek(+dt);\n      this.m = DateUtils.getMonth(+dt);\n      this.y = DateUtils.getYear(+dt);\n      this.dt = +dt;\n      this.tz = new Date(+dt).getTimezoneOffset();\n\n      return this;\n    }\n\n    return DateModel;\n  },\n\n//==============================================\n  //==============================================\n\n  YearsUtils: function (CommonUtils, Config) {\n    'use strict';\n\n    function _getLatestPossibleYear(yearsCount, selectedYear, now) {\n      var result = (selectedYear > now) ? selectedYear : now;\n      result += (yearsCount - 1);\n      return result;\n    }\n\n    function _getFirstPossibleYear(yearsCount, selectedYear, now) {\n      var result = (selectedYear < now) ? selectedYear : now;\n      result -= (yearsCount - 1);\n      return result;\n    }\n\n    function _getRangeValues(selectedYear, startYear, endYear, nowYear) {\n\n      var YEARS_COUNT = Config.defaultYearsCount;\n      var latestPossibleYear = _getLatestPossibleYear(YEARS_COUNT, selectedYear, nowYear);\n      var firstPossibleYear = _getFirstPossibleYear(YEARS_COUNT, selectedYear, nowYear);\n\n      var statement = {\n        isBoth: !!(startYear && endYear),\n        isBothNot: !!(!startYear && !endYear),\n        isOnlyStart: !!(startYear && !endYear),\n        isOnlyEnd: !!(!startYear && endYear),\n        isStartLower: (startYear < endYear),\n        isEndLower: (startYear > endYear),\n        isStartEqualEnd: (startYear === endYear),\n        isEndUpperNow: (endYear > nowYear),\n        isEndEqualNow: (endYear === nowYear)\n      };\n\n      //start = 2011, end = 2014\n      if (statement.isBoth && statement.isStartLower) {\n        return {from: startYear, to: endYear};\n      }\n\n      //start = 2014, end = 2011\n      if (statement.isBoth && statement.isEndLower) {\n        return {from: endYear, to: startYear};\n      }\n\n      //start = 2011, end = 2011\n      if (statement.isBoth && statement.isStartEqualEnd) {\n        return {from: startYear, to: endYear};\n      }\n\n      //start = 2014, end = null\n      if (statement.isOnlyStart) {\n        return {from: startYear, to: latestPossibleYear};\n      }\n\n      //start = null, end = 2014\n      if (statement.isOnlyEnd) {\n        //start = null, now = 2013 (or 2014), end = 2014\n        if (statement.isEndUpperNow || statement.isEndEqualNow) {\n          //TODO (S.Panfilov) wtf? I cannot remember wtf this statement check\n          if ((firstPossibleYear - YEARS_COUNT) > (endYear - YEARS_COUNT)) {\n            return {from: firstPossibleYear, to: endYear};\n          } else {\n            return {from: endYear - (YEARS_COUNT - 1), to: endYear};\n          }\n        }\n\n        //start = null, now = 2015,  end = 2014\n        if (!statement.isEndUpperNow) {\n          return {from: endYear - (YEARS_COUNT - 1), to: endYear};\n        }\n      }\n\n      //start = null, end = null\n      if (statement.isBothNot) {\n        return {from: firstPossibleYear, to: latestPossibleYear};\n      }\n    }\n\n    var exports = {\n      getYearsList: function (selectedYear, startYear, endYear, nowYear) {\n        var range = _getRangeValues(selectedYear, startYear, endYear, nowYear);\n        var result = CommonUtils.getArrayOfNumbers(range.from, range.to);\n\n        return CommonUtils.intArraySort(result, Config.yearsDirection);\n      }\n    };\n\n\n    return exports;\n  },\n\n//==============================================\n  //==============================================\n\n\n  MonthUtils: function (DateUtils, CommonUtils, Config) {\n    'use strict';\n\n    return {\n      getMonthList: function (startDt, endDt, selectedYear, limitsModel) {\n        var result;\n        var START_MONTH = 0;\n        var END_MONTH = 11;\n\n        if (startDt || endDt) {\n          var isYearOfLowerLimit = (startDt) ? limitsModel.start.y === selectedYear : false;\n          var isYearOfUpperLimit = (endDt) ? limitsModel.end.y === selectedYear : false;\n          var start = (startDt) ? limitsModel.start.m : START_MONTH;\n          var end = (endDt) ? limitsModel.end.m : END_MONTH;\n\n          // startYear == 2015, nowYear == 2015, endYear == 2015\n          if (isYearOfLowerLimit && isYearOfUpperLimit) {\n            result = CommonUtils.getArrayOfNumbers(start, end);\n          } else if (isYearOfLowerLimit && !isYearOfUpperLimit) {  // startYear == 2015, nowYear == 2015, endYear == 2016 (or null)\n            result = CommonUtils.getArrayOfNumbers(start, END_MONTH);\n          } else if (!isYearOfLowerLimit && isYearOfUpperLimit) {  // startYear == 2014 (or null), nowYear == 2015, endYear == 2015\n            result = CommonUtils.getArrayOfNumbers(START_MONTH, end);\n          } else {  // in all other cases return array of 12 month\n            result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n          }\n        } else {  // in all other cases return array of 12 month\n          result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n        }\n\n        return CommonUtils.intArraySort(result, Config.monthDirection);\n      }\n    };\n  },\n\n//==============================================\n  //==============================================\n\n  DaysUtils: function (DateUtils, CommonUtils, Config) {\n    'use strict';\n\n    return {\n      getDaysList: function (startDt, endDt, year, month, limitsModel) {\n        var result;\n        var START_DAY = 1;\n        var lastDayInMonth = DateUtils.getDaysInMonth(month, year);\n\n        if (startDt || endDt) {\n          var isYearOfLowerLimit = (startDt) ? limitsModel.start.y === year : false;\n          var isYearOfUpperLimit = (endDt) ? limitsModel.end.y === year : false;\n          var isMonthOfLowerLimit = (startDt) ? limitsModel.start.m === month : false;\n          var isMonthOfUpperLimit = (endDt) ? limitsModel.end.m === month : false;\n\n          var isLowerLimit = (isYearOfLowerLimit && isMonthOfLowerLimit);\n          var isUpperLimit = (isYearOfUpperLimit && isMonthOfUpperLimit);\n\n          var start = (startDt) ? limitsModel.start.d : START_DAY;\n          var end = (endDt) ? limitsModel.end.d : lastDayInMonth;\n\n          if (isLowerLimit && isUpperLimit) {\n            result = CommonUtils.getArrayOfNumbers(start, end);\n          } else if (isLowerLimit && !isUpperLimit) {\n            result = CommonUtils.getArrayOfNumbers(start, lastDayInMonth);\n          } else if (!isLowerLimit && isUpperLimit) {\n            result = CommonUtils.getArrayOfNumbers(START_DAY, end);\n          } else {  // in all other cases return array of 12 month\n            result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n          }\n        } else {  // in all other cases return array of 12 month\n          result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n        }\n\n        return CommonUtils.intArraySort(result, Config.daysDirection);\n      }\n    };\n  },\n\n//==============================================\n  //==============================================\n\n  DataClass: function (DateUtils, CommonUtils, YearsUtils, MonthUtils, DaysUtils, DateModel, LimitsModel) {\n    'use strict';\n\n    function _getSelected(model, start, end) {\n      var result;\n\n      var isUpperStart = (model.dt > start);\n      var isEqualStart = (model.dt === start);\n      var isLowerEnd = (model.dt > end);\n      var isEqualEnd = (model.dt === end);\n\n      //start == 1; model == 1 or 2 or 3; end == 3;\n      if ((isUpperStart || isEqualStart) || (isLowerEnd || isEqualEnd)) {\n        result = new DateModel(model.dt);\n      } else if (!isUpperStart) { //start == 1; model == 0\n        result = new DateModel(start);\n      } else if (!isUpperStart) { //model == 4; end == 3;\n        result = new DateModel(end);\n      } else {//paranoid case\n        result = new DateModel(new Date().getTime());\n      }\n\n      return result;\n    }\n\n    return function (model, start, end) {\n\n      var _data = {\n        _start: null,\n        _end: null,\n        _limitDates: null\n      };\n\n      var exports = {\n        selected: {},\n        list: {\n          y: null,\n          m: null,\n          d: null\n        },\n        reloadYearsList: function () {\n          var selectedYear = DateUtils.getYear(exports.selected.dt);\n          var startYear = DateUtils.getYear(_data._start);\n          var endYear = DateUtils.getYear(_data._end);\n          //exports.list.y = YearsUtils.getYearsList(selectedYear, _data._start, _data._end, _data.limitsModel.now.y);\n          exports.list.y = YearsUtils.getYearsList(selectedYear, startYear, endYear, _data.limitsModel.now.y);\n          return this;\n        },\n        reloadMonthList: function () {\n          var selectedYear = DateUtils.getYear(exports.selected.dt);\n          var startMonth = DateUtils.getMonth(_data._start);\n          var endMonth = DateUtils.getMonth(_data._end);\n          exports.list.m = MonthUtils.getMonthList(startMonth, endMonth, selectedYear, _data.limitsModel);\n          return this;\n        },\n        reloadDaysList: function () {\n          var selectedYear = DateUtils.getYear(exports.selected.dt);\n          var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n          exports.list.d = DaysUtils.getDaysList(_data._start, _data._end, selectedYear, selectedMonth, _data.limitsModel);\n          return this;\n        }\n      };\n\n      model.dt = CommonUtils.isValidNumber(model.dt) ? model.dt : null;\n      start = CommonUtils.isValidNumber(start) ? start : null;\n      end = CommonUtils.isValidNumber(end) ? end : null;\n\n      exports.selected = _getSelected(model, start, end);\n      var selectedYear = DateUtils.getYear(exports.selected.dt);\n      var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n\n      _data.limitsModel = new LimitsModel(start, end);\n      _data._start = start;\n      _data._end = end;\n\n      exports.list.y = YearsUtils.getYearsList(selectedYear, _data.limitsModel.start.y, _data.limitsModel.end.y, _data.limitsModel.now.y);\n      exports.list.m = MonthUtils.getMonthList(start, end, selectedYear, _data.limitsModel);\n      exports.list.d = DaysUtils.getDaysList(start, end, selectedYear, selectedMonth, _data.limitsModel);\n\n      return exports;\n    };\n  }\n\n//==============================================\n};})();"],"sourceRoot":"/source/"}