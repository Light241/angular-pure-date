{"version":3,"sources":["x-date-core.js"],"names":["xDateCore","selectedDt","startDt","endDt","x","Config","isUtc","direction","d","m","y","YEARS_COUNT","START_DAY","START_MONTH","END_MONTH","daysList","monthList","CommonUtils","isValidNumber","num","isNumber","isNaN","parseFloat","isNotInfinity","isFinite","getArrayOfNumbers","start","end","this","isReverse","targetLength","arr","Array","newArr","apply","result","map","n","reverse","intArraySort","desc","a","b","DESC","sort","ListsState","list","reloadDaysList","DaysUtils","getDaysList","reloadMonthList","MonthUtils","getMonthList","reloadYearsList","YearsUtils","getYearsList","initList","DateModel","dt","Number","DateUtils","getDay","dow","getDayOfWeek","getMonth","getYear","tz","Date","getTimezoneOffset","getVal","method","date","call","isYearEqualLimit","limitName","unit","val","State","exports","prototype","getUTCDate","getDate","getUTCDay","getUTCFullYear","getFullYear","getUTCMonth","getDaysInMonth","month","year","isValidModel","model","isDateUpperStartLimit","isDateLowerEndLimit","isDateBetweenLimits","isYearEqualStart","isYearEqualEnd","isMonthEqualStart","isMonthEqualEnd","getLimits","selected","isLower","isUpper","getArrFromAndTo","aStart","aEnd","lastDayInMonth","from","to","limit","isStart","isExist","isEnd","setSelected","isForce","self","isDtBeyondStart","isDtBeyondEnd","setStart","setEnd","setLimits","resetNow","now","_getLatestPossibleYear","selectedY","nowY","_getFirstPossibleYear","getCases","startY","endY","isBoth","isBothNot","isOnlyStart","isOnlyEnd","isStartLower","isEndLower","isStartEqualEnd","isEndUpperNow","isEndEqualNow","_getRangeIfBothLimits","cases","latestPossibleYear","_getRangeIfOnlyEndLimits","firstPossibleYear","_getRangeValues","range"],"mappings":"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","file":"x-date-core.min.js","sourcesContent":["var xDateCore = function(selectedDt, startDt, endDt) {\n  'use strict';\n\n  var x = {\n    Config: {\n      isUtc: false,\n      direction: {\n        d: 'asc',\n        m: 'asc',\n        y: 'desc'\n      },\n      YEARS_COUNT: 30,\n      START_DAY: 1,\n      START_MONTH: 0,\n      END_MONTH: 11,\n      daysList: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      monthList: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    },\n\n    CommonUtils: {\n      isValidNumber: function(num) {\n        var isNumber = !isNaN(parseFloat(num));\n        var isNotInfinity = isFinite(num);\n        return isNumber && isNotInfinity;\n      },\n      getArrayOfNumbers: function(start, end) {\n        //TODO (S.Panfilov) check this in after build\n        //if (!exports.isValidNumber(start) || !exports.isValidNumber(end)) return [];\n        if (!this.isValidNumber(start) || !this.isValidNumber(end)) return [];\n\n        var isReverse = (start > end);\n        var targetLength = isReverse ? (start - end) + 1 : (end - start) + 1;\n        var arr = new Array(targetLength);\n        var newArr = Array.apply(null, arr);\n        var result = newArr.map(function(d, n) {\n          return (isReverse) ? n + end : n + start;\n        });\n\n        return (isReverse) ? result.reverse() : result;\n      },\n      intArraySort: function(arr, direction) {\n        var DESC = 'desc';\n\n        function desc(a, b) {\n          return b - a;\n        }\n\n        switch (direction) {\n          default: return arr.sort(function(a, b) {\n            return a - b;\n          });\n          case DESC:\n              return arr.sort(desc);\n        }\n      }\n    },\n    ListsState: {\n      list: {},\n      reloadDaysList: function() {\n        this.list.d = x.DaysUtils.getDaysList();\n      },\n      reloadMonthList: function() {\n        this.list.m = x.MonthUtils.getMonthList();\n      },\n      reloadYearsList: function() {\n        this.list.y = x.YearsUtils.getYearsList();\n      },\n      initList: function() {\n        this.reloadDaysList();\n        this.reloadMonthList();\n        this.reloadYearsList();\n      }\n    },\n\n    DateModel:\n      (function() {\n        return function DateModel(dt) {\n          if (!dt || Number.isNaN(+dt) || !Number.isFinite(+dt)) throw 'NaN or null';\n          this.d = x.DateUtils.getDay(+dt);\n          this.dow = x.DateUtils.getDayOfWeek(+dt);\n          this.m = x.DateUtils.getMonth(+dt);\n          this.y = x.DateUtils.getYear(+dt);\n          this.dt = +dt;\n          this.tz = new Date(+dt).getTimezoneOffset();\n\n          return this;\n        };\n      })(),\n\n    DateUtils:\n      (function() {\n\n        function getVal(dt, method) {\n          var date = new Date(+dt);\n          return (date && method) ? method.call(date) : null;\n        }\n\n        var exports = {\n          getDay: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (x.Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return getVal(dt, method);\n          },\n          getDayOfWeek: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (x.Config.isUtc) ? Date.prototype.getUTCDay : Date.prototype.getDay;\n            return getVal(dt, method);\n          },\n          getYear: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (x.Config.isUtc) ? Date.prototype.getUTCFullYear : Date.prototype.getFullYear;\n            return getVal(dt, method);\n          },\n          getMonth: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (x.Config.isUtc) ? Date.prototype.getUTCMonth : Date.prototype.getMonth;\n            return getVal(dt, method);\n          },\n          getDaysInMonth: function(month, year) {\n            var method = (x.Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return method.call(new Date(+year, (+month) + 1, 0));\n          },\n          isValidModel: function(model) {\n            return !!model && (!!model.dt || model.dt === 0) && !Number.isNaN(+model.dt) && Number.isFinite(+model.dt);\n          },\n          isDateUpperStartLimit: function(dt, start) {\n            if (!start) return true;\n            if ((!dt && dt !== 0) || Number.isNaN(+dt) || Number.isNaN(+start)) throw 'NaN or null';\n            return (+dt > +start);\n          },\n          isDateLowerEndLimit: function(dt, end) {\n            if (!end) return true;\n            if (Number.isNaN(+dt) || Number.isNaN(+end)) throw 'NaN or null';\n            return (+dt < +end);\n          },\n          isDateBetweenLimits: function(dt, start, end) {\n            return (exports.isDateUpperStartLimit(dt, start) && exports.isDateLowerEndLimit(dt, end));\n          },\n          isYearEqualStart: function(year) {\n            return isYearEqualLimit('start', ['y'], year);\n          },\n          isYearEqualEnd: function(year) {\n            return isYearEqualLimit('end', ['y'], year);\n          },\n          isMonthEqualStart: function(month) {\n            return isYearEqualLimit('start', ['m'], month);\n          },\n          isMonthEqualEnd: function(month) {\n            return isYearEqualLimit('end', ['m'], month);\n          }\n        };\n\n        function isYearEqualLimit(limitName, unit, val) {\n          return (x.State[limitName].isExist) ? x.State[limitName][unit] === +val : false;\n        }\n\n\n        return exports;\n      })(),\n\n    DaysUtils:\n      (function() {\n\n        function getLimits() {\n          var isYearEqualStart = x.DateUtils.isYearEqualStart(x.State.selected.y);\n          var isYearEqualEnd = x.DateUtils.isYearEqualEnd(x.State.selected.y);\n          var isMonthEqualStart = x.DateUtils.isMonthEqualStart(x.State.selected.m);\n          var isMonthEqualEnd = x.DateUtils.isMonthEqualEnd(x.State.selected.m);\n\n          return {\n            isLower: (isYearEqualStart && isMonthEqualStart),\n            isUpper: (isYearEqualEnd && isMonthEqualEnd)\n          }\n        }\n\n        function getArrFromAndTo(aStart, aEnd, lastDayInMonth) {\n          var from = x.Config.START_DAY;\n          var to = lastDayInMonth;\n          var limit = getLimits();\n\n          if (limit.isLower && limit.isUpper) {\n            from = aStart;\n            to = aEnd;\n          } else if (limit.isLower && !limit.isUpper) {\n            from = aStart;\n            to = lastDayInMonth;\n          } else if (!limit.isLower && limit.isUpper) {\n            from = x.Config.START_DAY;\n            to = aEnd;\n          }\n\n          return {\n            from: from,\n            to: to\n          };\n        }\n\n        return {\n          getDaysList: function() {\n            var result = {};\n            var lastDayInMonth = x.DateUtils.getDaysInMonth(x.State.selected.y, x.State.selected.y);\n            var isStart = x.State.start.isExist;\n            var isEnd = x.State.end.isExist;\n\n            if (isStart || isEnd) {\n              var start = (isStart) ? x.State.start.d : x.Config.START_DAY;\n              var end = (isEnd) ? x.State.end.d : lastDayInMonth;\n              result = getArrFromAndTo(start, end, lastDayInMonth);\n            } else { // in all other cases return array of 12 month\n              result = {\n                from: x.Config.START_DAY,\n                to: lastDayInMonth\n              };\n            }\n\n            return x.CommonUtils.intArraySort(x.CommonUtils.getArrayOfNumbers(result.from, result.to), x.Config.direction.d);\n          }\n        }\n      })(),\n\n    State: {\n      selected: {}, //TODO (S.Panfilov) refactor selected\n      setSelected: function(dt, isForce) {\n        var result;\n        var self = this;\n\n        if (isForce) {\n          this.selected = new x.DateModel(dt);\n          return;\n        }\n\n        var isStart = self.start.isExist;\n        var isEnd = self.end.isExist;\n        var isDtBeyondStart = (dt > this.start.dt);\n        var isDtBeyondEnd = (dt > this.end.dt);\n\n\n        if (isStart || isEnd) {\n          if (!isDtBeyondStart) {\n            result = this.start.dt;\n          } else if (!isDtBeyondEnd) {\n            result = this.end.dt;\n          }\n        } else {\n          result = dt;\n        }\n\n        this.selected = new x.DateModel(result);\n      },\n      start: {},\n      setStart: function(dt) {\n        if (!dt && dt !== 0) return;\n        this.start = new x.DateModel(dt);\n        this.start.isStart = true;\n      },\n      end: {},\n      setEnd: function(dt) {\n        if (!dt && dt !== 0) return;\n        this.end = new x.DateModel(dt);\n        this.start.isEnd = true;\n      },\n      setLimits: function(start, end) {\n        this.setStart(start);\n        this.setEnd(end);\n      },\n      resetNow: function() {\n        this.now = new x.DateModel(+(new Date()));\n      },\n      now: null // new x.DateModel(+(new Date())) //TODO (S.Panfilov) FIX it - x is undefined\n    },\n\n    MonthUtils:\n      (function() {\n\n        function getArrFromAndTo(start, end) {\n          var isYearEqualStart = x.DateUtils.isYearEqualStart(x.State.selected.y);\n          var isYearEqualEnd = x.DateUtils.isYearEqualEnd(x.State.selected.y);\n\n          var from = x.Config.START_MONTH;\n          var to = x.Config.END_MONTH;\n\n          // startYear == 2015, nowYear == 2015, endYear == 2015\n          if (isYearEqualStart && isYearEqualEnd) {\n            from = start;\n            to = end;\n          } else if (isYearEqualStart && !isYearEqualEnd) { // startYear == 2015, nowYear == 2015, endYear == 2016 (or null)\n            from = start;\n            to = x.Config.END_MONTH;\n          } else if (!isYearEqualStart && isYearEqualEnd) { // startYear == 2014 (or null), nowYear == 2015, endYear == 2015\n            from = x.Config.START_MONTH;\n            to = end;\n          }\n\n          return {\n            from: from,\n            to: to\n          };\n        }\n\n        return {\n          getMonthList: function() {\n            var result = {};\n            var isStart = x.State.start.isExist;\n            var isEnd = x.State.end.isExist;\n\n            if (isStart || isEnd) {\n              var start = (isStart) ? x.State.start.m : x.Config.START_MONTH;\n              var end = (isEnd) ? x.State.end.m : x.Config.END_MONTH;\n              result = getArrFromAndTo(start, end);\n            } else { // in all other cases return array of 12 month\n              result = {\n                from: x.Config.START_MONTH,\n                to: x.Config.END_MONTH\n              };\n            }\n\n            return x.CommonUtils.intArraySort(x.CommonUtils.getArrayOfNumbers(result.from, result.to), x.Config.direction.m);\n          }\n        }\n      })(),\n\n    YearsUtils:\n      (function() {\n\n        function _getLatestPossibleYear(selectedY, nowY) {\n          var result = (selectedY > nowY) ? selectedY : nowY;\n          result += (x.Config.YEARS_COUNT - 1);\n          return result;\n        }\n\n        function _getFirstPossibleYear(selectedY, nowY) {\n          var result = (selectedY < nowY) ? selectedY : nowY;\n          result -= (x.Config.YEARS_COUNT - 1);\n          return result;\n        }\n\n        function getCases(startY, endY, nowY) {\n          return {\n            isBoth: !!(startY && endY),\n            isBothNot: !!(!startY && !endY),\n            isOnlyStart: !!(startY && !endY),\n            isOnlyEnd: !!(!startY && endY),\n            isStartLower: (startY < endY),\n            isEndLower: (startY > endY),\n            isStartEqualEnd: (startY === endY),\n            isEndUpperNow: (endY > nowY),\n            isEndEqualNow: (endY === nowY)\n          };\n        }\n\n        function _getRangeIfBothLimits(cases, startY, endY, latestPossibleYear) {\n          //start = 2011, end = 2014\n          if (cases.isStartLower) {\n            return {\n              from: startY,\n              to: endY\n            };\n          }\n\n          //start = 2014, end = 2011\n          if (cases.isEndLower) {\n            return {\n              from: endY,\n              to: startY\n            };\n          }\n\n          //start = 2011, end = 2011\n          if (cases.isStartEqualEnd) {\n            return {\n              from: startY,\n              to: endY\n            };\n          }\n\n          //start = 2014, end = null\n          if (cases.isOnlyStart) {\n            return {\n              from: startY,\n              to: latestPossibleYear\n            };\n          }\n        }\n\n        function _getRangeIfOnlyEndLimits(cases, endY, firstPossibleYear) {\n          //start = null, now = 2013 (or 2014), end = 2014\n          if (cases.isEndUpperNow || cases.isEndEqualNow) {\n            //TODO (S.Panfilov) wtf? I cannot remember wtf this case check\n            if ((firstPossibleYear - x.Config.YEARS_COUNT) > (endY - x.Config.YEARS_COUNT)) {\n              return {\n                from: firstPossibleYear,\n                to: endY\n              };\n            } else {\n              return {\n                from: endY - (x.Config.YEARS_COUNT - 1),\n                to: endY\n              };\n            }\n          }\n\n          //start = null, now = 2015,  end = 2014\n          if (!cases.isEndUpperNow) {\n            return {\n              from: endY - (x.Config.YEARS_COUNT - 1),\n              to: endY\n            };\n          }\n        }\n\n        function _getRangeValues(selectedY, startY, endY, nowY) {\n\n          var latestPossibleYear = _getLatestPossibleYear(selectedY, nowY);\n          var firstPossibleYear = _getFirstPossibleYear(selectedY, nowY);\n\n          var cases = getCases(startY, endY, nowY);\n\n          if (cases.isBoth) {\n            return _getRangeIfBothLimits(cases, startY, endY, latestPossibleYear);\n          }\n\n          //start = null, end = 2014\n          if (cases.isOnlyEnd) {\n            return _getRangeIfOnlyEndLimits(cases, endY, firstPossibleYear);\n          }\n\n          //start = null, end = null\n          if (cases.isBothNot) {\n            return {\n              from: firstPossibleYear,\n              to: latestPossibleYear\n            };\n          }\n        }\n\n        var exports = {\n          getYearsList: function() {\n            var range = _getRangeValues(x.State.selected.y, x.State.start.y, x.State.end.y, x.State.now.y);\n            var result = x.CommonUtils.getArrayOfNumbers(range.from, range.to);\n\n            return x.CommonUtils.intArraySort(result, x.Config.direction.y);\n          }\n        };\n\n\n        return exports;\n      })()\n  };\n  x.State.resetNow();\n  x.State.setLimits(startDt, endDt);\n  x.State.setSelected(selectedDt);\n  return x;\n};"],"sourceRoot":"/source/"}