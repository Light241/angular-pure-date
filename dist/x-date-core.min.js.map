{"version":3,"sources":["x-date-core.js"],"names":["xDateCore","x","Config","isUtc","monthDirection","daysDirection","yearsDirection","defaultYearsCount","daysList","monthList","CommonUtils","isValidNumber","num","isNumber","isNaN","parseFloat","isNotInfinity","isFinite","getArrayOfNumbers","start","end","this","isReverse","targetLength","arr","Array","newArr","apply","result","map","d","n","reverse","intArraySort","direction","desc","a","b","DESC","sort","DataClass","_getSelected","model","isUpperStart","dt","isEqualStart","isLowerEnd","isEqualEnd","DateModel","Date","getTime","_data","_start","_end","_limitDates","exports","selected","list","y","m","reloadYearsList","selectedYear","DateUtils","getYear","startYear","endYear","YearsUtils","getYearsList","LimitsModel","now","reloadMonthList","startMonth","getMonth","endMonth","MonthUtils","getMonthList","reloadDaysList","selectedMonth","DaysUtils","getDaysList","Number","getDay","dow","getDayOfWeek","tz","getTimezoneOffset","getVal","method","date","call","prototype","getUTCDate","getDate","getUTCDay","getUTCFullYear","getFullYear","getUTCMonth","getDaysInMonth","month","year","isValidModel","isDateUpperStartLimit","isDateLowerEndLimit","isDateBetweenLimits","startDt","endDt","limitsModel","START_DAY","lastDayInMonth","isYearOfLowerLimit","isYearOfUpperLimit","isMonthOfLowerLimit","isMonthOfUpperLimit","isLowerLimit","isUpperLimit","START_MONTH","END_MONTH","_getLatestPossibleYear","yearsCount","_getFirstPossibleYear","_getRangeValues","nowYear","YEARS_COUNT","latestPossibleYear","firstPossibleYear","statement","isBoth","isBothNot","isOnlyStart","isOnlyEnd","isStartLower","isEndLower","isStartEqualEnd","isEndUpperNow","isEndEqualNow","from","to","range"],"mappings":"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","file":"x-date-core.min.js","sourcesContent":["var xDateCore = (function() {\n  'use strict';\n\n  var x = {\n    Config: {\n      isUtc: false,\n      monthDirection: 'asc',\n      daysDirection: 'asc',\n      yearsDirection: 'desc',\n      defaultYearsCount: 50,\n      daysList: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      monthList: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    },\n\n    CommonUtils: {\n      isValidNumber: function(num) {\n        var isNumber = !isNaN(parseFloat(num));\n        var isNotInfinity = isFinite(num);\n        return isNumber && isNotInfinity;\n      },\n      getArrayOfNumbers: function(start, end) {\n        //TODO (S.Panfilov) check this in after build\n        //if (!exports.isValidNumber(start) || !exports.isValidNumber(end)) return [];\n        if (!this.isValidNumber(start) || !this.isValidNumber(end)) return [];\n\n        var isReverse = (start > end);\n        var targetLength = isReverse ? (start - end) + 1 : (end - start) + 1;\n        var arr = new Array(targetLength);\n        var newArr = Array.apply(null, arr);\n        var result = newArr.map(function(d, n) {\n          return (isReverse) ? n + end : n + start;\n        });\n\n        return (isReverse) ? result.reverse() : result;\n      },\n      intArraySort: function(arr, direction) {\n        var DESC = 'desc';\n\n        function desc(a, b) {\n          return b - a;\n        }\n\n        switch (direction) {\n          default: return arr.sort(function(a, b) {\n            return a - b;\n          });\n          case DESC:\n              return arr.sort(desc);\n        }\n      }\n    },\n\n    DataClass:\n      (function() {\n\n        function _getSelected(model, start, end) {\n          var result;\n\n          var isUpperStart = (model.dt > start);\n          var isEqualStart = (model.dt === start);\n          var isLowerEnd = (model.dt > end);\n          var isEqualEnd = (model.dt === end);\n\n          //start == 1; model == 1 or 2 or 3; end == 3;\n          if ((isUpperStart || isEqualStart) || (isLowerEnd || isEqualEnd)) {\n            result = new x.DateModel(model.dt);\n          } else if (!isUpperStart) { //start == 1; model == 0\n            result = new x.DateModel(start);\n          } else if (!isUpperStart) { //model == 4; end == 3;\n            result = new x.DateModel(end);\n          } else { //paranoid case\n            result = new x.DateModel(new Date().getTime());\n          }\n\n          return result;\n        }\n\n        return function(model, start, end) {\n\n          var _data = {\n            _start: null,\n            _end: null,\n            _limitDates: null\n          };\n\n          var exports = {\n            selected: {},\n            list: {\n              y: null,\n              m: null,\n              d: null\n            },\n            reloadYearsList: function() {\n              var selectedYear = x.DateUtils.getYear(exports.selected.dt);\n              var startYear = x.DateUtils.getYear(_data._start);\n              var endYear = x.DateUtils.getYear(_data._end);\n              //exports.list.y = x.YearsUtils.getYearsList(selectedYear, _data._start, _data._end, _data.LimitsModel.now.y);\n              exports.list.y = x.YearsUtils.getYearsList(selectedYear, startYear, endYear, _data.LimitsModel.now.y);\n              return this;\n            },\n            reloadMonthList: function() {\n              var selectedYear = x.DateUtils.getYear(exports.selected.dt);\n              var startMonth = x.DateUtils.getMonth(_data._start);\n              var endMonth = x.DateUtils.getMonth(_data._end);\n              exports.list.m = x.MonthUtils.getMonthList(startMonth, endMonth, selectedYear, _data.LimitsModel);\n              return this;\n            },\n            reloadDaysList: function() {\n              var selectedYear = x.DateUtils.getYear(exports.selected.dt);\n              var selectedMonth = x.DateUtils.getMonth(exports.selected.dt);\n              exports.list.d = x.DaysUtils.getDaysList(_data._start, _data._end, selectedYear, selectedMonth, _data.LimitsModel);\n              return this;\n            }\n          };\n\n          model.dt = x.CommonUtils.isValidNumber(model.dt) ? model.dt : null;\n          start = x.CommonUtils.isValidNumber(start) ? start : null;\n          end = x.CommonUtils.isValidNumber(end) ? end : null;\n\n          exports.selected = _getSelected(model, start, end);\n          var selectedYear = x.DateUtils.getYear(exports.selected.dt);\n          var selectedMonth = x.DateUtils.getMonth(exports.selected.dt);\n\n          _data.LimitsModel = new x.LimitsModel(start, end);\n          _data._start = start;\n          _data._end = end;\n\n          exports.list.y = x.YearsUtils.getYearsList(selectedYear, _data.LimitsModel.start.y, _data.LimitsModel.end.y, _data.LimitsModel.now.y);\n          exports.list.m = x.MonthUtils.getMonthList(start, end, selectedYear, _data.LimitsModel);\n          exports.list.d = x.DaysUtils.getDaysList(start, end, selectedYear, selectedMonth, _data.LimitsModel);\n\n          return exports;\n        }\n      })(),\n\n    DateModel:\n      (function() {\n        return function DateModel(dt) {\n          if (!dt || Number.isNaN(+dt) || !Number.isFinite(+dt)) throw 'NaN or null';\n          this.d = x.DateUtils.getDay(+dt);\n          this.dow = x.DateUtils.getDayOfWeek(+dt);\n          this.m = x.DateUtils.getMonth(+dt);\n          this.y = x.DateUtils.getYear(+dt);\n          this.dt = +dt;\n          this.tz = new Date(+dt).getTimezoneOffset();\n\n          return this;\n        };\n      })(),\n\n    DateUtils:\n      (function() {\n\n        function getVal(dt, method) {\n          var date = new Date(+dt);\n          return (date && method) ? method.call(date) : null;\n        }\n\n        var exports = {\n          getDay: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (x.Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return getVal(dt, method);\n          },\n          getDayOfWeek: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (x.Config.isUtc) ? Date.prototype.getUTCDay : Date.prototype.getDay;\n            return getVal(dt, method);\n          },\n          getYear: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (x.Config.isUtc) ? Date.prototype.getUTCFullYear : Date.prototype.getFullYear;\n            return getVal(dt, method);\n          },\n          getMonth: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (x.Config.isUtc) ? Date.prototype.getUTCMonth : Date.prototype.getMonth;\n            return getVal(dt, method);\n          },\n          getDaysInMonth: function(month, year) {\n            var method = (x.Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return method.call(new Date(+year, (+month) + 1, 0));\n          },\n          isValidModel: function(model) {\n            return !!model && (!!model.dt || model.dt === 0) && !Number.isNaN(+model.dt) && Number.isFinite(+model.dt);\n          },\n          isDateUpperStartLimit: function(dt, start) {\n            if (!start) return true;\n            //TODO (S.Panfilov) should be a const\n            if ((!dt && dt !== 0) || Number.isNaN(+dt) || Number.isNaN(+start)) throw 'NaN or null';\n            //TODO (S.Panfilov) may be (+dt >= +end)\n            return (+dt > +start);\n          },\n          isDateLowerEndLimit: function(dt, end) {\n            if (!end) return true;\n            //TODO (S.Panfilov) should be a const\n            if (Number.isNaN(+dt) || Number.isNaN(+end)) throw 'NaN or null';\n            //TODO (S.Panfilov) may be (+dt <= +end)\n            return (+dt < +end);\n          },\n          isDateBetweenLimits: function(dt, start, end) {\n            //TODO (S.Panfilov) lowerAndEqual and UpperAndEqual?\n            return (exports.isDateUpperStartLimit(dt, start) && exports.isDateLowerEndLimit(dt, end));\n          }\n        };\n\n\n        return exports;\n      })(),\n\n    DaysUtils: {\n      getDaysList: function(startDt, endDt, year, month, limitsModel) {\n        var result;\n        var START_DAY = 1;\n        var lastDayInMonth = x.DateUtils.getDaysInMonth(month, year);\n\n        if (startDt || endDt) {\n          var isYearOfLowerLimit = (startDt) ? limitsModel.start.y === year : false;\n          var isYearOfUpperLimit = (endDt) ? limitsModel.end.y === year : false;\n          var isMonthOfLowerLimit = (startDt) ? limitsModel.start.m === month : false;\n          var isMonthOfUpperLimit = (endDt) ? limitsModel.end.m === month : false;\n\n          var isLowerLimit = (isYearOfLowerLimit && isMonthOfLowerLimit);\n          var isUpperLimit = (isYearOfUpperLimit && isMonthOfUpperLimit);\n\n          var start = (startDt) ? limitsModel.start.d : START_DAY;\n          var end = (endDt) ? limitsModel.end.d : lastDayInMonth;\n\n          if (isLowerLimit && isUpperLimit) {\n            result = x.CommonUtils.getArrayOfNumbers(start, end);\n          } else if (isLowerLimit && !isUpperLimit) {\n            result = x.CommonUtils.getArrayOfNumbers(start, lastDayInMonth);\n          } else if (!isLowerLimit && isUpperLimit) {\n            result = x.CommonUtils.getArrayOfNumbers(START_DAY, end);\n          } else { // in all other cases return array of 12 month\n            result = x.CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n          }\n        } else { // in all other cases return array of 12 month\n          result = x.CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n        }\n\n        return x.CommonUtils.intArraySort(result, x.Config.daysDirection);\n      }\n    },\n\n    LimitsModel: {\n      _start: {},\n      get start() {\n        return this._start;\n      },\n      set start(dt) {\n        this._start.d = x.DateUtils.getDay(dt);\n        this._start.m = x.DateUtils.getMonth(dt);\n        this._start.y = x.DateUtils.getYear(dt);\n        this._start.dt = +dt;\n      },\n      _end: {},\n      get end() {\n        return this._end;\n      },\n      set end(dt) {\n        this._end.d = x.DateUtils.getDay(dt);\n        this._end.m = x.DateUtils.getMonth(dt);\n        this._end.y = x.DateUtils.getYear(dt);\n        this._end.dt = +dt;\n      },\n      now: {\n        d: x.DateUtils.getDay(dt),\n        m: x.DateUtils.getMonth(dt),\n        y: x.DateUtils.getYear(dt),\n        dt: +(new Date())\n      }\n    },\n\n    MonthUtils:\n      (function() {\n        return {\n          getMonthList: function(startDt, endDt, selectedYear, limitsModel) {\n            var result;\n            var START_MONTH = 0;\n            var END_MONTH = 11;\n\n            if (startDt || endDt) {\n              var isYearOfLowerLimit = (startDt) ? limitsModel.start.y === selectedYear : false;\n              var isYearOfUpperLimit = (endDt) ? limitsModel.end.y === selectedYear : false;\n              var start = (startDt) ? limitsModel.start.m : START_MONTH;\n              var end = (endDt) ? limitsModel.end.m : END_MONTH;\n\n              // startYear == 2015, nowYear == 2015, endYear == 2015\n              if (isYearOfLowerLimit && isYearOfUpperLimit) {\n                result = x.CommonUtils.getArrayOfNumbers(start, end);\n              } else if (isYearOfLowerLimit && !isYearOfUpperLimit) { // startYear == 2015, nowYear == 2015, endYear == 2016 (or null)\n                result = x.CommonUtils.getArrayOfNumbers(start, END_MONTH);\n              } else if (!isYearOfLowerLimit && isYearOfUpperLimit) { // startYear == 2014 (or null), nowYear == 2015, endYear == 2015\n                result = x.CommonUtils.getArrayOfNumbers(START_MONTH, end);\n              } else { // in all other cases return array of 12 month\n                result = x.CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n              }\n            } else { // in all other cases return array of 12 month\n              result = x.CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n            }\n\n            return x.CommonUtils.intArraySort(result, x.Config.monthDirection);\n          }\n        };\n      })(),\n\n    YearsUtils:\n      (function() {\n\n        function _getLatestPossibleYear(yearsCount, selectedYear, now) {\n          var result = (selectedYear > now) ? selectedYear : now;\n          result += (yearsCount - 1);\n          return result;\n        }\n\n        function _getFirstPossibleYear(yearsCount, selectedYear, now) {\n          var result = (selectedYear < now) ? selectedYear : now;\n          result -= (yearsCount - 1);\n          return result;\n        }\n\n        function _getRangeValues(selectedYear, startYear, endYear, nowYear) {\n\n          var YEARS_COUNT = x.Config.defaultYearsCount;\n          var latestPossibleYear = _getLatestPossibleYear(YEARS_COUNT, selectedYear, nowYear);\n          var firstPossibleYear = _getFirstPossibleYear(YEARS_COUNT, selectedYear, nowYear);\n\n          var statement = {\n            isBoth: !!(startYear && endYear),\n            isBothNot: !!(!startYear && !endYear),\n            isOnlyStart: !!(startYear && !endYear),\n            isOnlyEnd: !!(!startYear && endYear),\n            isStartLower: (startYear < endYear),\n            isEndLower: (startYear > endYear),\n            isStartEqualEnd: (startYear === endYear),\n            isEndUpperNow: (endYear > nowYear),\n            isEndEqualNow: (endYear === nowYear)\n          };\n\n          //start = 2011, end = 2014\n          if (statement.isBoth && statement.isStartLower) {\n            return {\n              from: startYear,\n              to: endYear\n            };\n          }\n\n          //start = 2014, end = 2011\n          if (statement.isBoth && statement.isEndLower) {\n            return {\n              from: endYear,\n              to: startYear\n            };\n          }\n\n          //start = 2011, end = 2011\n          if (statement.isBoth && statement.isStartEqualEnd) {\n            return {\n              from: startYear,\n              to: endYear\n            };\n          }\n\n          //start = 2014, end = null\n          if (statement.isOnlyStart) {\n            return {\n              from: startYear,\n              to: latestPossibleYear\n            };\n          }\n\n          //start = null, end = 2014\n          if (statement.isOnlyEnd) {\n            //start = null, now = 2013 (or 2014), end = 2014\n            if (statement.isEndUpperNow || statement.isEndEqualNow) {\n              //TODO (S.Panfilov) wtf? I cannot remember wtf this statement check\n              if ((firstPossibleYear - YEARS_COUNT) > (endYear - YEARS_COUNT)) {\n                return {\n                  from: firstPossibleYear,\n                  to: endYear\n                };\n              } else {\n                return {\n                  from: endYear - (YEARS_COUNT - 1),\n                  to: endYear\n                };\n              }\n            }\n\n            //start = null, now = 2015,  end = 2014\n            if (!statement.isEndUpperNow) {\n              return {\n                from: endYear - (YEARS_COUNT - 1),\n                to: endYear\n              };\n            }\n          }\n\n          //start = null, end = null\n          if (statement.isBothNot) {\n            return {\n              from: firstPossibleYear,\n              to: latestPossibleYear\n            };\n          }\n        }\n\n        var exports = {\n          getYearsList: function(selectedYear, startYear, endYear, nowYear) {\n            var range = _getRangeValues(selectedYear, startYear, endYear, nowYear);\n            var result = x.CommonUtils.getArrayOfNumbers(range.from, range.to);\n\n            return x.CommonUtils.intArraySort(result, x.Config.yearsDirection);\n          }\n        };\n\n\n        return exports;\n      })()\n  };\n  return x;\n})();"],"sourceRoot":"/source/"}