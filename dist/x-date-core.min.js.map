{"version":3,"sources":["x-date-core.js"],"names":["xDateCore","x","Config","isUtc","direction","d","m","y","defaultYearsCount","daysList","monthList","CommonUtils","isValidNumber","num","isNumber","isNaN","parseFloat","isNotInfinity","isFinite","getArrayOfNumbers","start","end","this","isReverse","targetLength","arr","Array","newArr","apply","result","map","n","reverse","intArraySort","desc","a","b","DESC","sort","DataClass","_getSelected","model","isUpperStart","dt","isEqualStart","isLowerEnd","isEqualEnd","DateModel","Date","getTime","_data","_start","_end","exports","selected","list","reloadYearsList","YearsUtils","getYearsList","reloadMonthList","MonthUtils","getMonthList","reloadDaysList","DaysUtils","getDaysList","State","setLimits","Number","DateUtils","getDay","dow","getDayOfWeek","getMonth","getYear","tz","getTimezoneOffset","getVal","method","date","call","prototype","getUTCDate","getDate","getUTCDay","getUTCFullYear","getFullYear","getUTCMonth","getDaysInMonth","month","year","isValidModel","isDateUpperStartLimit","isDateLowerEndLimit","isDateBetweenLimits","makeDmyModel","START_DAY","lastDayInMonth","isStart","isExist","isEnd","isYearOfLowerLimit","isYearOfUpperLimit","isMonthOfLowerLimit","isMonthOfUpperLimit","isLowerLimit","isUpperLimit","setSelected","setStart","setEnd","resetNow","now","START_MONTH","END_MONTH","_getLatestPossibleYear","yearsCount","selectedY","nowY","_getFirstPossibleYear","_getRangeValues","startY","endY","YEARS_COUNT","latestPossibleYear","firstPossibleYear","statement","isBoth","isBothNot","isOnlyStart","isOnlyEnd","isStartLower","isEndLower","isStartEqualEnd","isEndUpperNow","isEndEqualNow","from","to","range"],"mappings":"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","file":"x-date-core.min.js","sourcesContent":["var xDateCore = (function() {\n  'use strict';\n\n  var x = {\n    Config: {\n      isUtc: false,\n      direction: {\n        d: 'asc',\n        m: 'asc',\n        y: 'desc'\n      },\n      defaultYearsCount: 30,\n      daysList: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      monthList: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    },\n\n    CommonUtils: {\n      isValidNumber: function(num) {\n        var isNumber = !isNaN(parseFloat(num));\n        var isNotInfinity = isFinite(num);\n        return isNumber && isNotInfinity;\n      },\n      getArrayOfNumbers: function(start, end) {\n        //TODO (S.Panfilov) check this in after build\n        //if (!exports.isValidNumber(start) || !exports.isValidNumber(end)) return [];\n        if (!this.isValidNumber(start) || !this.isValidNumber(end)) return [];\n\n        var isReverse = (start > end);\n        var targetLength = isReverse ? (start - end) + 1 : (end - start) + 1;\n        var arr = new Array(targetLength);\n        var newArr = Array.apply(null, arr);\n        var result = newArr.map(function(d, n) {\n          return (isReverse) ? n + end : n + start;\n        });\n\n        return (isReverse) ? result.reverse() : result;\n      },\n      intArraySort: function(arr, direction) {\n        var DESC = 'desc';\n\n        function desc(a, b) {\n          return b - a;\n        }\n\n        switch (direction) {\n          default: return arr.sort(function(a, b) {\n            return a - b;\n          });\n          case DESC:\n              return arr.sort(desc);\n        }\n      }\n    },\n\n    DataClass:\n      (function() {\n\n        function _getSelected(model, start, end) {\n          var result;\n\n          var isUpperStart = (model.dt > start);\n          var isEqualStart = (model.dt === start);\n          var isLowerEnd = (model.dt > end);\n          var isEqualEnd = (model.dt === end);\n\n          //start == 1; model == 1 or 2 or 3; end == 3;\n          if ((isUpperStart || isEqualStart) || (isLowerEnd || isEqualEnd)) {\n            result = new x.DateModel(model.dt);\n          } else if (!isUpperStart) { //start == 1; model == 0\n            result = new x.DateModel(start);\n          } else if (!isUpperStart) { //model == 4; end == 3;\n            result = new x.DateModel(end);\n          } else { //paranoid case\n            result = new x.DateModel(new Date().getTime());\n          }\n\n          return result;\n        }\n\n        return function(model, start, end) {\n\n          var _data = {\n            _start: null,\n            _end: null\n          };\n\n          var exports = {\n            selected: {},\n            list: {\n              y: null,\n              m: null,\n              d: null\n            },\n            reloadYearsList: function() {\n              exports.list.y = x.YearsUtils.getYearsList();\n              return this;\n            },\n            reloadMonthList: function() {\n              exports.list.m = x.MonthUtils.getMonthList();\n              return this;\n            },\n            reloadDaysList: function() {\n              exports.list.d = x.DaysUtils.getDaysList();\n              return this;\n            }\n          };\n\n          model.dt = x.CommonUtils.isValidNumber(model.dt) ? model.dt : null;\n          start = x.CommonUtils.isValidNumber(start) ? start : null;\n          end = x.CommonUtils.isValidNumber(end) ? end : null;\n\n          exports.selected = _getSelected(model, start, end);\n\n          x.State.setLimits(start, end);\n          _data._start = start;\n          _data._end = end;\n\n          exports.list.y = x.YearsUtils.getYearsList();\n          exports.list.m = x.MonthUtils.getMonthList();\n          exports.list.d = x.DaysUtils.getDaysList();\n\n          return exports;\n        }\n      })(),\n\n    DateModel:\n      (function() {\n        return function DateModel(dt) {\n          if (!dt || Number.isNaN(+dt) || !Number.isFinite(+dt)) throw 'NaN or null';\n          this.d = x.DateUtils.getDay(+dt);\n          this.dow = x.DateUtils.getDayOfWeek(+dt);\n          this.m = x.DateUtils.getMonth(+dt);\n          this.y = x.DateUtils.getYear(+dt);\n          this.dt = +dt;\n          this.tz = new Date(+dt).getTimezoneOffset();\n\n          return this;\n        };\n      })(),\n\n    DateUtils:\n      (function() {\n\n        function getVal(dt, method) {\n          var date = new Date(+dt);\n          return (date && method) ? method.call(date) : null;\n        }\n\n        var exports = {\n          getDay: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (x.Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return getVal(dt, method);\n          },\n          getDayOfWeek: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (x.Config.isUtc) ? Date.prototype.getUTCDay : Date.prototype.getDay;\n            return getVal(dt, method);\n          },\n          getYear: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (x.Config.isUtc) ? Date.prototype.getUTCFullYear : Date.prototype.getFullYear;\n            return getVal(dt, method);\n          },\n          getMonth: function(dt) {\n            if (!dt && dt !== 0) return null;\n            var method = (x.Config.isUtc) ? Date.prototype.getUTCMonth : Date.prototype.getMonth;\n            return getVal(dt, method);\n          },\n          getDaysInMonth: function(month, year) {\n            var method = (x.Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return method.call(new Date(+year, (+month) + 1, 0));\n          },\n          isValidModel: function(model) {\n            return !!model && (!!model.dt || model.dt === 0) && !Number.isNaN(+model.dt) && Number.isFinite(+model.dt);\n          },\n          isDateUpperStartLimit: function(dt, start) {\n            if (!start) return true;\n            if ((!dt && dt !== 0) || Number.isNaN(+dt) || Number.isNaN(+start)) throw 'NaN or null';\n            return (+dt > +start);\n          },\n          isDateLowerEndLimit: function(dt, end) {\n            if (!end) return true;\n            if (Number.isNaN(+dt) || Number.isNaN(+end)) throw 'NaN or null';\n            return (+dt < +end);\n          },\n          isDateBetweenLimits: function(dt, start, end) {\n            return (exports.isDateUpperStartLimit(dt, start) && exports.isDateLowerEndLimit(dt, end));\n          },\n          makeDmyModel: function(dt) {\n            return {\n              d: exports.getDay(dt),\n              m: exports.getMonth(dt),\n              y: exports.getYear(dt),\n              dt: +dt\n            };\n          }\n        };\n\n\n        return exports;\n      })(),\n\n    DaysUtils: {\n      getDaysList: function() {\n        var result;\n        var START_DAY = 1;\n\n        var lastDayInMonth = x.DateUtils.getDaysInMonth(x.State.selected.y, x.State.selected.y);\n\n        var isStart = x.State.start.isExist;\n        var isEnd = x.State.end.isExist;\n\n        if (isStart || isEnd) {\n          var isYearOfLowerLimit = (isStart) ? x.State.start.y === x.State.selected.y : false;\n          var isYearOfUpperLimit = (isEnd) ? x.State.end.y === x.State.selected.y : false;\n          var isMonthOfLowerLimit = (isStart) ? x.State.start.m === x.State.selected.y : false;\n          var isMonthOfUpperLimit = (isEnd) ? x.State.end.m === x.State.selected.y : false;\n\n          var isLowerLimit = (isYearOfLowerLimit && isMonthOfLowerLimit);\n          var isUpperLimit = (isYearOfUpperLimit && isMonthOfUpperLimit);\n\n          var start = (isStart) ? x.State.start.d : START_DAY;\n          var end = (isEnd) ? x.State.end.d : lastDayInMonth;\n\n          if (isLowerLimit && isUpperLimit) {\n            result = x.CommonUtils.getArrayOfNumbers(start, end);\n          } else if (isLowerLimit && !isUpperLimit) {\n            result = x.CommonUtils.getArrayOfNumbers(start, lastDayInMonth);\n          } else if (!isLowerLimit && isUpperLimit) {\n            result = x.CommonUtils.getArrayOfNumbers(START_DAY, end);\n          } else { // in all other cases return array of 12 month\n            result = x.CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n          }\n        } else { // in all other cases return array of 12 month\n          result = x.CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n        }\n\n        return x.CommonUtils.intArraySort(result, x.Config.direction.d);\n      }\n    },\n\n    State: {\n      selected: {}, //TODO (S.Panfilov) refactor selected\n      setSelected: function(dt) {\n        this.selected = x.DateUtils.makeDmyModel(dt);\n      },\n      start: {},\n      setStart: function(dt) {\n        this.start = x.DateUtils.makeDmyModel(dt);\n        this.start.isExist = true;\n      },\n      end: {},\n      setEnd: function(dt) {\n        this.end = x.DateUtils.makeDmyModel(dt);\n        this.end.isExist = true;\n      },\n      setLimits: function(start, end) {\n        this.setStart(start);\n        this.setEnd(end);\n      },\n      resetNow: function() {\n        this.now = x.DateUtils.makeDmyModel(+(new Date()));\n        return this.now;\n      },\n      now: this.resetNow()\n    },\n\n    MonthUtils: {\n      getMonthList: function() {\n        var result;\n        var START_MONTH = 0;\n        var END_MONTH = 11;\n\n        var isStart = x.State.start.isExist;\n        var isEnd = x.State.end.isExist;\n\n        if (isStart || isEnd) {\n          var isYearOfLowerLimit = (isStart) ? x.State.start.y === x.State.selected.y : false;\n          var isYearOfUpperLimit = (isEnd) ? x.State.end.y === x.State.selected.y : false;\n          var start = (isStart) ? x.State.start.m : START_MONTH;\n          var end = (isEnd) ? x.State.end.m : END_MONTH;\n\n          // startYear == 2015, nowYear == 2015, endYear == 2015\n          if (isYearOfLowerLimit && isYearOfUpperLimit) {\n            result = x.CommonUtils.getArrayOfNumbers(start, end);\n          } else if (isYearOfLowerLimit && !isYearOfUpperLimit) { // startYear == 2015, nowYear == 2015, endYear == 2016 (or null)\n            result = x.CommonUtils.getArrayOfNumbers(start, END_MONTH);\n          } else if (!isYearOfLowerLimit && isYearOfUpperLimit) { // startYear == 2014 (or null), nowYear == 2015, endYear == 2015\n            result = x.CommonUtils.getArrayOfNumbers(START_MONTH, end);\n          } else { // in all other cases return array of 12 month\n            result = x.CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n          }\n        } else { // in all other cases return array of 12 month\n          result = x.CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n        }\n\n        return x.CommonUtils.intArraySort(result, x.Config.direction.m);\n      }\n    },\n\n    YearsUtils:\n      (function() {\n\n        function _getLatestPossibleYear(yearsCount, selectedY, nowY) {\n          var result = (selectedY > nowY) ? selectedY : nowY;\n          result += (yearsCount - 1);\n          return result;\n        }\n\n        function _getFirstPossibleYear(yearsCount, selectedY, nowY) {\n          var result = (selectedY < nowY) ? selectedY : nowY;\n          result -= (yearsCount - 1);\n          return result;\n        }\n\n        function _getRangeValues(selectedY, startY, endY, nowY) {\n\n          var YEARS_COUNT = x.Config.defaultYearsCount;\n          var latestPossibleYear = _getLatestPossibleYear(YEARS_COUNT, selectedY, nowY);\n          var firstPossibleYear = _getFirstPossibleYear(YEARS_COUNT, selectedY, nowY);\n\n          var statement = {\n            isBoth: !!(startY && endY),\n            isBothNot: !!(!startY && !endY),\n            isOnlyStart: !!(startY && !endY),\n            isOnlyEnd: !!(!startY && endY),\n            isStartLower: (startY < endY),\n            isEndLower: (startY > endY),\n            isStartEqualEnd: (startY === endY),\n            isEndUpperNow: (endY > nowY),\n            isEndEqualNow: (endY === nowY)\n          };\n\n          //start = 2011, end = 2014\n          if (statement.isBoth && statement.isStartLower) {\n            return {\n              from: startY,\n              to: endY\n            };\n          }\n\n          //start = 2014, end = 2011\n          if (statement.isBoth && statement.isEndLower) {\n            return {\n              from: endY,\n              to: startY\n            };\n          }\n\n          //start = 2011, end = 2011\n          if (statement.isBoth && statement.isStartEqualEnd) {\n            return {\n              from: startY,\n              to: endY\n            };\n          }\n\n          //start = 2014, end = null\n          if (statement.isOnlyStart) {\n            return {\n              from: startY,\n              to: latestPossibleYear\n            };\n          }\n\n          //start = null, end = 2014\n          if (statement.isOnlyEnd) {\n            //start = null, now = 2013 (or 2014), end = 2014\n            if (statement.isEndUpperNow || statement.isEndEqualNow) {\n              //TODO (S.Panfilov) wtf? I cannot remember wtf this statement check\n              if ((firstPossibleYear - YEARS_COUNT) > (endY - YEARS_COUNT)) {\n                return {\n                  from: firstPossibleYear,\n                  to: endY\n                };\n              } else {\n                return {\n                  from: endY - (YEARS_COUNT - 1),\n                  to: endY\n                };\n              }\n            }\n\n            //start = null, now = 2015,  end = 2014\n            if (!statement.isEndUpperNow) {\n              return {\n                from: endY - (YEARS_COUNT - 1),\n                to: endY\n              };\n            }\n          }\n\n          //start = null, end = null\n          if (statement.isBothNot) {\n            return {\n              from: firstPossibleYear,\n              to: latestPossibleYear\n            };\n          }\n        }\n\n        var exports = {\n          getYearsList: function() {\n            var range = _getRangeValues(x.State.selected.y, x.State.start.y, x.State.end.y, x.State.now.y);\n            var result = x.CommonUtils.getArrayOfNumbers(range.from, range.to);\n\n            return x.CommonUtils.intArraySort(result, x.Config.direction.y);\n          }\n        };\n\n\n        return exports;\n      })()\n  };\n  return x;\n})();"],"sourceRoot":"/source/"}