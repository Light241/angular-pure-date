{"version":3,"sources":["x-date-core.js"],"names":["xDateCore","exports","Config","isUtc","monthDirection","daysDirection","yearsDirection","defaultYearsCount","daysList","monthList","CommonUtils","isValidNumber","num","isNumber","isNaN","parseFloat","isNotInfinity","isFinite","getArrayOfNumbers","start","end","isReverse","targetLength","arr","Array","newArr","apply","result","map","d","n","reverse","intArraySort","direction","desc","a","b","DESC","sort","DateUtils","getVal","dt","method","date","Date","call","getDay","prototype","getUTCDate","getDate","getDayOfWeek","getUTCDay","getYear","getUTCFullYear","getFullYear","getMonth","getUTCMonth","getDaysInMonth","month","year","isValidModel","model","Number","isDateUpperStartLimit","isDateLowerEndLimit","isDateBetweenLimits","LimitsModel","_setStart","m","y","this","_setEnd","_setNow","getTime","now","DateModel","dow","tz","getTimezoneOffset","YearsUtils","_getLatestPossibleYear","yearsCount","selectedYear","_getFirstPossibleYear","_getRangeValues","startYear","endYear","nowYear","YEARS_COUNT","latestPossibleYear","firstPossibleYear","statement","isBoth","isOnlyStart","isOnlyEnd","isStartLower","isEndLower","isStartEqualEnd","isEndUpperNow","isEndEqualNow","from","to","getYearsList","range","MonthUtils","getMonthList","startDt","endDt","limitsModel","START_MONTH","END_MONTH","isYearOfLowerLimit","isYearOfUpperLimit","DaysUtils","getDaysList","START_DAY","lastDayInMonth","isMonthOfLowerLimit","isMonthOfUpperLimit","isLowerLimit","isUpperLimit","DataClass","_getSelected","isUpperStart","isEqualStart","isLowerEnd","isEqualEnd","_data","_start","_end","_limitDates","selected","list","reloadYearsList","reloadMonthList","reloadDaysList","selectedMonth","module"],"mappings":"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","file":"x-date-core.min.js","sourcesContent":["var xDateCore = (function () {\n\r    var exports = {};\n\rexports.Config = (function () {\n    'use strict';\n\n    return {\n        isUtc: false,\n        monthDirection: 'asc',\n        daysDirection: 'asc',\n        yearsDirection: 'desc',\n        defaultYearsCount: 50,\n        daysList: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        monthList: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    };\n})();\nexports.CommonUtils = (function () {\n    'use strict';\n\n    var exports = {\n        isValidNumber: function (num) {\n            var isNumber = !isNaN(parseFloat(num));\n            var isNotInfinity = isFinite(num);\n            return isNumber && isNotInfinity;\n        },\n        getArrayOfNumbers: function (start, end) {\n            if (!exports.isValidNumber(start) || !exports.isValidNumber(end)) return [];\n\n            var isReverse = (start > end);\n            var targetLength = isReverse ? (start - end) + 1 : (end - start ) + 1;\n            var arr = new Array(targetLength);\n            var newArr = Array.apply(null, arr);\n            var result = newArr.map(function (d, n) {\n                return (isReverse) ? n + end : n + start;\n            });\n\n            return (isReverse) ? result.reverse() : result;\n        },\n        intArraySort: function (arr, direction) {\n            var DESC = 'desc';\n\n            function desc(a, b) {\n                return b - a;\n            }\n\n            switch (direction) {\n                default:\n                    return arr.sort(function (a, b) {\n                        return a - b;\n                    });\n                case DESC:\n                    return arr.sort(desc);\n            }\n        }\n    };\n\n    return exports;\n})();\nexports.DateUtils = (function (Config) {\n    'use strict';\n\n    function getVal(dt, method) {\n        var date = new Date(+dt);\n        return (date && method) ? method.call(date) : null;\n    }\n\n    var exports = {\n        getDay: function (dt) {\n            var method = (Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return getVal(dt, method);\n        },\n        getDayOfWeek: function (dt) {\n            var method = (Config.isUtc) ? Date.prototype.getUTCDay : Date.prototype.getDay;\n            return getVal(dt, method);\n        },\n        getYear: function (dt) {\n            var method = (Config.isUtc) ? Date.prototype.getUTCFullYear : Date.prototype.getFullYear;\n            return getVal(dt, method);\n        },\n        getMonth: function (dt) {\n            var method = (Config.isUtc) ? Date.prototype.getUTCMonth : Date.prototype.getMonth;\n            return getVal(dt, method);\n        },\n        getDaysInMonth: function (month, year) {\n            var method = (Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return method.call(new Date(+year, (+month) + 1, 0));\n        },\n        isValidModel: function (model) {\n            return !!model && (!!model.dt || model.dt === 0) && !Number.isNaN(+model.dt) && Number.isFinite(+model.dt);\n        },\n        isDateUpperStartLimit: function (dt, start) {\n            if (!start) return true;\n            //TODO (S.Panfilov) should be a const\n            if ((!dt && dt !== 0) || Number.isNaN(+dt) || Number.isNaN(+start)) throw 'NaN or null';\n            //TODO (S.Panfilov) may be (+dt >= +end)\n            return (+dt > +start);\n        },\n        isDateLowerEndLimit: function (dt, end) {\n            if (!end) return true;\n            //TODO (S.Panfilov) should be a const\n            if (Number.isNaN(+dt) || Number.isNaN(+end)) throw 'NaN or null';\n            //TODO (S.Panfilov) may be (+dt <= +end)\n            return (+dt < +end);\n        },\n        isDateBetweenLimits: function (dt, start, end) {\n            //TODO (S.Panfilov) lowerAndEqual and UpperAndEqual?\n            return (exports.isDateUpperStartLimit(dt, start) && exports.isDateLowerEndLimit(dt, end));\n        }\n    };\n\n\n    return exports;\n})(exports.Config);\nexports.LimitsModel = (function (DateUtils) {\n    'use strict';\n\n    function LimitsModel(start, end) {\n\n        var exports = {\n            start: {},\n            end: {},\n            now: {}\n        };\n\n        function _setStart(dt) {\n            exports.start.d = DateUtils.getDay(+dt);\n            exports.start.m = DateUtils.getMonth(+dt);\n            exports.start.y = DateUtils.getYear(+dt);\n            exports.start.dt = +dt;\n            //TODO (S.Panfilov) Possible strict violation\n            return this;\n        }\n\n        function _setEnd(dt) {\n            exports.end.d = DateUtils.getDay(+dt);\n            exports.end.m = DateUtils.getMonth(+dt);\n            exports.end.y = DateUtils.getYear(+dt);\n            exports.end.dt = +dt;\n            //TODO (S.Panfilov) Possible strict violation\n            return this;\n        }\n\n        function _setNow() {\n            var dt = new Date().getTime();\n            exports.now.d = DateUtils.getDay(dt);\n            exports.now.m = DateUtils.getMonth(dt);\n            exports.now.y = DateUtils.getYear(dt);\n            exports.now.dt = dt;\n            //TODO (S.Panfilov) Possible strict violation\n            return this;\n        }\n\n        if (start) _setStart(start);\n        if (end) _setEnd(end);\n        _setNow();\n\n        \n        return exports;\n    }\n    \n    return LimitsModel;\n})(exports.DateUtils);\nexports.DateModel = (function (DateUtils) {\n    'use strict';\n\n    function DateModel(dt) {\n        //TODO (S.Panfilov) throwed error must be a const\n        if (!dt || Number.isNaN(+dt) || !Number.isFinite(+dt)) throw 'NaN or null';\n        this.d = DateUtils.getDay(+dt);\n        this.dow = DateUtils.getDayOfWeek(+dt);\n        this.m = DateUtils.getMonth(+dt);\n        this.y = DateUtils.getYear(+dt);\n        this.dt = +dt;\n        this.tz = new Date(+dt).getTimezoneOffset();\n\n        return this;\n    }\n\n    return DateModel;\n})(exports.DateUtils);\nexports.YearsUtils = (function (CommonUtils, Config) {\n    'use strict';\n\n    function _getLatestPossibleYear(yearsCount, selectedYear, now) {\n        var result = (selectedYear > now) ? selectedYear : now;\n        result += (yearsCount - 1);\n        return result;\n    }\n\n    function _getFirstPossibleYear(yearsCount, selectedYear, now) {\n        var result = (selectedYear < now) ? selectedYear : now;\n        result -= (yearsCount - 1);\n        return result;\n    }\n\n    function _getRangeValues(selectedYear, startYear, endYear, nowYear, yearsCount) {\n\n        var YEARS_COUNT = Config.defaultYearsCount;\n        var latestPossibleYear = _getLatestPossibleYear(YEARS_COUNT, selectedYear, nowYear);\n        var firstPossibleYear = _getFirstPossibleYear(YEARS_COUNT, selectedYear, nowYear);\n\n        var statement = {\n            isBoth: startYear && endYear,\n            isOnlyStart: startYear && !endYear,\n            isOnlyEnd: !startYear && endYear,\n            isStartLower: startYear < endYear,\n            isEndLower: startYear > endYear,\n            isStartEqualEnd: startYear === endYear,\n            isEndUpperNow: endYear > nowYear,\n            isEndEqualNow: endYear === nowYear\n        };\n\n        //start = 2011, end = 2014\n        if (statement.isBoth && statement.isStartLower) {\n            return {from: startYear, to: endYear};\n        }\n\n        //start = 2014, end = 2011\n        if (statement.isBoth && statement.isEndLower) {\n            return {from: endYear, to: startYear};\n        }\n\n        //start = 2011, end = 2011\n        if (statement.isBoth && statement.isStartEqualEnd) {\n            return {from: startYear, to: endYear};\n        }\n\n        //start = 2014, end = null\n        if (statement.isOnlyStart) {\n            return {from: startYear, to: latestPossibleYear};\n        }\n\n        //start = null, now = 2013 (or 2014), end = 2014\n        if (statement.isOnlyEnd && (statement.isEndUpperNow || statement.isEndEqualNow)) {\n            //TODO (S.Panfilov) wtf? I cannot remember wtf this statement check\n            if ((firstPossibleYear - yearsCount) > (endYear - yearsCount)) {\n                return {from: firstPossibleYear, to: endYear};\n            } else {\n                return {from: endYear - (yearsCount - 1), to: endYear};\n            }\n        }\n\n        //now = 2015,  end = 2014\n        if (statement.isOnlyEnd && statement.isEndUpperNow) {\n            return {from: endYear - (yearsCount - 1), to: endYear};\n        }\n\n        //start = null, end = null\n        if (statement.isOnlyStart) {\n            return {from: firstPossibleYear, to: latestPossibleYear};\n        }\n    }\n\n    var exports = {\n        getYearsList: function (selectedYear, startYear, endYear, nowYear) {\n            var range = _getRangeValues(selectedYear, startYear, endYear, nowYear);\n            var result = CommonUtils.getArrayOfNumbers(range.from, range.to);\n\n            return CommonUtils.intArraySort(result, Config.yearsDirection);\n        }\n    };\n\n\n    return exports;\n})\n(exports.CommonUtils, exports.Config);\nexports.MonthUtils = (function (DateUtils, CommonUtils, Config) {\n    'use strict';\n\n    return {\n        getMonthList: function (startDt, endDt, selectedYear, limitsModel) {\n            var result;\n            var START_MONTH = 0;\n            var END_MONTH = 11;\n\n            if (startDt || endDt) {\n                var isYearOfLowerLimit = (startDt) ? limitsModel.start.y === selectedYear : false;\n                var isYearOfUpperLimit = (endDt) ? limitsModel.end.y === selectedYear : false;\n                var start = (startDt) ? limitsModel.start.m : START_MONTH;\n                var end = (endDt) ? limitsModel.end.m : END_MONTH;\n\n                // startYear == 2015, nowYear == 2015, endYear == 2015\n                if (isYearOfLowerLimit && isYearOfUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, end);\n                } else if (isYearOfLowerLimit && !isYearOfUpperLimit) {  // startYear == 2015, nowYear == 2015, endYear == 2016 (or null)\n                    result = CommonUtils.getArrayOfNumbers(start, END_MONTH);\n                } else if (!isYearOfLowerLimit && isYearOfUpperLimit) {  // startYear == 2014 (or null), nowYear == 2015, endYear == 2015\n                    result = CommonUtils.getArrayOfNumbers(START_MONTH, end);\n                } else {  // in all other cases return array of 12 month\n                    result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n                }\n            } else {  // in all other cases return array of 12 month\n                result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n            }\n\n            return CommonUtils.intArraySort(result, Config.monthDirection);\n        }\n    };\n})(exports.DateUtils, exports.CommonUtils, exports.Config);\nexports.DaysUtils = (function (DateUtils, CommonUtils, Config) {\n    'use strict';\n\n    return {\n        getDaysList: function (startDt, endDt, year, month, limitsModel) {\n            var result;\n            var START_DAY = 1;\n            var lastDayInMonth = DateUtils.getDaysInMonth(month, year);\n\n            if (startDt || endDt) {\n                var isYearOfLowerLimit = (startDt) ? limitsModel.start.y === year : false;\n                var isYearOfUpperLimit = (endDt) ? limitsModel.end.y === year : false;\n                var isMonthOfLowerLimit = (startDt) ? limitsModel.start.m === month : false;\n                var isMonthOfUpperLimit = (endDt) ? limitsModel.end.m === month : false;\n\n                var isLowerLimit = (isYearOfLowerLimit && isMonthOfLowerLimit);\n                var isUpperLimit = (isYearOfUpperLimit && isMonthOfUpperLimit);\n\n                var start = (startDt) ? limitsModel.start.d : START_DAY;\n                var end = (endDt) ? limitsModel.end.d : lastDayInMonth;\n\n                if (isLowerLimit && isUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, end);\n                } else if (isLowerLimit && !isUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, lastDayInMonth);\n                } else if (!isLowerLimit && isUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(START_DAY, end);\n                } else {  // in all other cases return array of 12 month\n                    result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n                }\n            } else {  // in all other cases return array of 12 month\n                result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n            }\n\n            return CommonUtils.intArraySort(result, Config.daysDirection);\n        }\n    };\n})(exports.DateUtils, exports.CommonUtils, exports.Config);\nexports.DataClass = (function (DateUtils, CommonUtils, YearsUtils, MonthUtils, DaysUtils, DateModel, LimitsModel) {\n    'use strict';\n\n    function _getSelected(model, start, end) {\n        var result;\n\n        var isUpperStart = (model.dt > start);\n        var isEqualStart = (model.dt === start);\n        var isLowerEnd = (model.dt > end);\n        var isEqualEnd = (model.dt === end);\n\n        //start == 1; model == 1 or 2 or 3; end == 3;\n        if ((isUpperStart || isEqualStart) || (isLowerEnd || isEqualEnd)) {\n            result = new DateModel(model.dt);\n        } else if (!isUpperStart) { //start == 1; model == 0\n            result = new DateModel(start);\n        } else if (!isUpperStart) { //model == 4; end == 3;\n            result = new DateModel(end);\n        } else {//paranoid case\n            result = new DateModel(new Date().getTime());\n        }\n\n        return result;\n    }\n\n    return function (model, start, end) {\n\n        var _data = {\n            _start: null,\n            _end: null,\n            _limitDates: null\n        };\n\n        var exports = {\n            selected: {},\n            list: {\n                y: null,\n                m: null,\n                d: null\n            },\n            reloadYearsList: function () {\n                exports.list.y = YearsUtils.getYearsList(_data._start, _data._end);\n                return this;\n            },\n            reloadMonthList: function () {\n                var selectedYear = DateUtils.getYear(exports.selected.dt);\n                exports.list.m = MonthUtils.getMonthList(_data._start, _data._end, selectedYear);\n                return this;\n            },\n            reloadDaysList: function () {\n                var selectedYear = DateUtils.getYear(exports.selected.dt);\n                var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n                exports.list.d = DaysUtils.getDaysList(_data._start, _data._end, selectedYear, selectedMonth);\n                return this;\n            }\n        };\n\n        model.dt = CommonUtils.isValidNumber(model.dt) ? model.dt : null;\n        start = CommonUtils.isValidNumber(start) ? start : null;\n        end = CommonUtils.isValidNumber(end) ? end : null;\n\n        exports.selected = _getSelected(model, start, end);\n        var selectedYear = DateUtils.getYear(exports.selected.dt);\n        var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n\n        _data.limitsModel = new LimitsModel(start, end);\n        _data._start = start;\n        _data._end = end;\n\n        exports.list.y = YearsUtils.getYearsList(selectedYear, _data.limitsModel.start.y, _data.limitsModel.start.y, _data.limitsModel.start.y)\n        //exports.list.y = YearsUtils.getYearsList(start, end, exports.selected, _data.limitsModel);\n        exports.list.m = MonthUtils.getMonthList(start, end, selectedYear, _data.limitsModel);\n        exports.list.d = DaysUtils.getDaysList(start, end, selectedYear, selectedMonth, exports.selected, _data.limitsModel);\n\n        return exports;\n    };\n\n})(exports.DateUtils, exports.CommonUtils, exports.YearsUtils, exports.MonthUtils, exports.DaysUtils, exports.DateModel, exports.LimitsModel);\n\r    if (typeof module === 'object' && module.exports) module.exports = exports;\n\r\n\r    return exports;})();"],"sourceRoot":"/source/"}