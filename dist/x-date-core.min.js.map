{"version":3,"sources":["x-date-core.js"],"names":["xDateCore","Config","isUtc","monthDirection","daysDirection","yearsDirection","defaultYearsCount","daysList","monthList","CommonUtils","exports","isValidNumber","num","isNumber","isNaN","parseFloat","isNotInfinity","isFinite","getArrayOfNumbers","start","end","isReverse","targetLength","arr","Array","newArr","apply","result","map","d","n","reverse","intArraySort","direction","desc","a","b","DESC","sort","DataClass","DateUtils","YearsUtils","MonthUtils","DaysUtils","DateModel","LimitsModel","_getSelected","model","isUpperStart","dt","isEqualStart","isLowerEnd","isEqualEnd","Date","getTime","_data","_start","_end","_limitDates","selected","list","y","m","reloadYearsList","selectedYear","getYear","startYear","endYear","getYearsList","limitsModel","now","this","reloadMonthList","startMonth","getMonth","endMonth","getMonthList","reloadDaysList","selectedMonth","getDaysList","Number","getDay","dow","getDayOfWeek","tz","getTimezoneOffset","getVal","method","date","call","prototype","getUTCDate","getDate","getUTCDay","getUTCFullYear","getFullYear","getUTCMonth","getDaysInMonth","month","year","isValidModel","isDateUpperStartLimit","isDateLowerEndLimit","isDateBetweenLimits","startDt","endDt","START_DAY","lastDayInMonth","isYearOfLowerLimit","isYearOfUpperLimit","isMonthOfLowerLimit","isMonthOfUpperLimit","isLowerLimit","isUpperLimit","_setStart","_setEnd","_setNow","START_MONTH","END_MONTH","_getLatestPossibleYear","yearsCount","_getFirstPossibleYear","_getRangeValues","nowYear","YEARS_COUNT","latestPossibleYear","firstPossibleYear","statement","isBoth","isBothNot","isOnlyStart","isOnlyEnd","isStartLower","isEndLower","isStartEqualEnd","isEndUpperNow","isEndEqualNow","from","to","range"],"mappings":"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","file":"x-date-core.min.js","sourcesContent":["var xDateCore = (function() {\n  'use strict';\n\n  return {\n    Config: function() {\n      return {\n        isUtc: false,\n        monthDirection: 'asc',\n        daysDirection: 'asc',\n        yearsDirection: 'desc',\n        defaultYearsCount: 50,\n        daysList: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        monthList: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n      };\n    },\n\n    CommonUtils: function() {\n\n      var exports = {\n        isValidNumber: function(num) {\n          var isNumber = !isNaN(parseFloat(num));\n          var isNotInfinity = isFinite(num);\n          return isNumber && isNotInfinity;\n        },\n        getArrayOfNumbers: function(start, end) {\n          if (!exports.isValidNumber(start) || !exports.isValidNumber(end)) return [];\n\n          var isReverse = (start > end);\n          var targetLength = isReverse ? (start - end) + 1 : (end - start) + 1;\n          var arr = new Array(targetLength);\n          var newArr = Array.apply(null, arr);\n          var result = newArr.map(function(d, n) {\n            return (isReverse) ? n + end : n + start;\n          });\n\n          return (isReverse) ? result.reverse() : result;\n        },\n        intArraySort: function(arr, direction) {\n          var DESC = 'desc';\n\n          function desc(a, b) {\n            return b - a;\n          }\n\n          switch (direction) {\n            default: return arr.sort(function(a, b) {\n              return a - b;\n            });\n            case DESC:\n                return arr.sort(desc);\n          }\n        }\n      };\n\n      return exports;\n    },\n\n    DataClass: function(DateUtils, CommonUtils, YearsUtils, MonthUtils, DaysUtils, DateModel, LimitsModel) {\n\n      function _getSelected(model, start, end) {\n        var result;\n\n        var isUpperStart = (model.dt > start);\n        var isEqualStart = (model.dt === start);\n        var isLowerEnd = (model.dt > end);\n        var isEqualEnd = (model.dt === end);\n\n        //start == 1; model == 1 or 2 or 3; end == 3;\n        if ((isUpperStart || isEqualStart) || (isLowerEnd || isEqualEnd)) {\n          result = new DateModel(model.dt);\n        } else if (!isUpperStart) { //start == 1; model == 0\n          result = new DateModel(start);\n        } else if (!isUpperStart) { //model == 4; end == 3;\n          result = new DateModel(end);\n        } else { //paranoid case\n          result = new DateModel(new Date().getTime());\n        }\n\n        return result;\n      }\n\n      return function(model, start, end) {\n\n        var _data = {\n          _start: null,\n          _end: null,\n          _limitDates: null\n        };\n\n        var exports = {\n          selected: {},\n          list: {\n            y: null,\n            m: null,\n            d: null\n          },\n          reloadYearsList: function() {\n            var selectedYear = DateUtils.getYear(exports.selected.dt);\n            var startYear = DateUtils.getYear(_data._start);\n            var endYear = DateUtils.getYear(_data._end);\n            //exports.list.y = YearsUtils.getYearsList(selectedYear, _data._start, _data._end, _data.limitsModel.now.y);\n            exports.list.y = YearsUtils.getYearsList(selectedYear, startYear, endYear, _data.limitsModel.now.y);\n            return this;\n          },\n          reloadMonthList: function() {\n            var selectedYear = DateUtils.getYear(exports.selected.dt);\n            var startMonth = DateUtils.getMonth(_data._start);\n            var endMonth = DateUtils.getMonth(_data._end);\n            exports.list.m = MonthUtils.getMonthList(startMonth, endMonth, selectedYear, _data.limitsModel);\n            return this;\n          },\n          reloadDaysList: function() {\n            var selectedYear = DateUtils.getYear(exports.selected.dt);\n            var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n            exports.list.d = DaysUtils.getDaysList(_data._start, _data._end, selectedYear, selectedMonth, _data.limitsModel);\n            return this;\n          }\n        };\n\n        model.dt = CommonUtils.isValidNumber(model.dt) ? model.dt : null;\n        start = CommonUtils.isValidNumber(start) ? start : null;\n        end = CommonUtils.isValidNumber(end) ? end : null;\n\n        exports.selected = _getSelected(model, start, end);\n        var selectedYear = DateUtils.getYear(exports.selected.dt);\n        var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n\n        _data.limitsModel = new LimitsModel(start, end);\n        _data._start = start;\n        _data._end = end;\n\n        exports.list.y = YearsUtils.getYearsList(selectedYear, _data.limitsModel.start.y, _data.limitsModel.end.y, _data.limitsModel.now.y);\n        exports.list.m = MonthUtils.getMonthList(start, end, selectedYear, _data.limitsModel);\n        exports.list.d = DaysUtils.getDaysList(start, end, selectedYear, selectedMonth, _data.limitsModel);\n\n        return exports;\n      };\n    },\n\n    DateModel: function(DateUtils) {\n      function DateModel(dt) {\n        //TODO (S.Panfilov) throwed error must be a const\n        if (!dt || Number.isNaN(+dt) || !Number.isFinite(+dt)) throw 'NaN or null';\n        this.d = DateUtils.getDay(+dt);\n        this.dow = DateUtils.getDayOfWeek(+dt);\n        this.m = DateUtils.getMonth(+dt);\n        this.y = DateUtils.getYear(+dt);\n        this.dt = +dt;\n        this.tz = new Date(+dt).getTimezoneOffset();\n\n        return this;\n      }\n\n      return DateModel;\n    },\n\n    DateUtils: function(Config) {\n\n      function getVal(dt, method) {\n        var date = new Date(+dt);\n        return (date && method) ? method.call(date) : null;\n      }\n\n      var exports = {\n        getDay: function(dt) {\n          if (!dt && dt !== 0) return null;\n          var method = (Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n          return getVal(dt, method);\n        },\n        getDayOfWeek: function(dt) {\n          if (!dt && dt !== 0) return null;\n          var method = (Config.isUtc) ? Date.prototype.getUTCDay : Date.prototype.getDay;\n          return getVal(dt, method);\n        },\n        getYear: function(dt) {\n          if (!dt && dt !== 0) return null;\n          var method = (Config.isUtc) ? Date.prototype.getUTCFullYear : Date.prototype.getFullYear;\n          return getVal(dt, method);\n        },\n        getMonth: function(dt) {\n          if (!dt && dt !== 0) return null;\n          var method = (Config.isUtc) ? Date.prototype.getUTCMonth : Date.prototype.getMonth;\n          return getVal(dt, method);\n        },\n        getDaysInMonth: function(month, year) {\n          var method = (Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n          return method.call(new Date(+year, (+month) + 1, 0));\n        },\n        isValidModel: function(model) {\n          return !!model && (!!model.dt || model.dt === 0) && !Number.isNaN(+model.dt) && Number.isFinite(+model.dt);\n        },\n        isDateUpperStartLimit: function(dt, start) {\n          if (!start) return true;\n          //TODO (S.Panfilov) should be a const\n          if ((!dt && dt !== 0) || Number.isNaN(+dt) || Number.isNaN(+start)) throw 'NaN or null';\n          //TODO (S.Panfilov) may be (+dt >= +end)\n          return (+dt > +start);\n        },\n        isDateLowerEndLimit: function(dt, end) {\n          if (!end) return true;\n          //TODO (S.Panfilov) should be a const\n          if (Number.isNaN(+dt) || Number.isNaN(+end)) throw 'NaN or null';\n          //TODO (S.Panfilov) may be (+dt <= +end)\n          return (+dt < +end);\n        },\n        isDateBetweenLimits: function(dt, start, end) {\n          //TODO (S.Panfilov) lowerAndEqual and UpperAndEqual?\n          return (exports.isDateUpperStartLimit(dt, start) && exports.isDateLowerEndLimit(dt, end));\n        }\n      };\n\n\n      return exports;\n    },\n\n    DaysUtils: function(DateUtils, CommonUtils, Config) {\n      return {\n        getDaysList: function(startDt, endDt, year, month, limitsModel) {\n          var result;\n          var START_DAY = 1;\n          var lastDayInMonth = DateUtils.getDaysInMonth(month, year);\n\n          if (startDt || endDt) {\n            var isYearOfLowerLimit = (startDt) ? limitsModel.start.y === year : false;\n            var isYearOfUpperLimit = (endDt) ? limitsModel.end.y === year : false;\n            var isMonthOfLowerLimit = (startDt) ? limitsModel.start.m === month : false;\n            var isMonthOfUpperLimit = (endDt) ? limitsModel.end.m === month : false;\n\n            var isLowerLimit = (isYearOfLowerLimit && isMonthOfLowerLimit);\n            var isUpperLimit = (isYearOfUpperLimit && isMonthOfUpperLimit);\n\n            var start = (startDt) ? limitsModel.start.d : START_DAY;\n            var end = (endDt) ? limitsModel.end.d : lastDayInMonth;\n\n            if (isLowerLimit && isUpperLimit) {\n              result = CommonUtils.getArrayOfNumbers(start, end);\n            } else if (isLowerLimit && !isUpperLimit) {\n              result = CommonUtils.getArrayOfNumbers(start, lastDayInMonth);\n            } else if (!isLowerLimit && isUpperLimit) {\n              result = CommonUtils.getArrayOfNumbers(START_DAY, end);\n            } else { // in all other cases return array of 12 month\n              result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n            }\n          } else { // in all other cases return array of 12 month\n            result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n          }\n\n          return CommonUtils.intArraySort(result, Config.daysDirection);\n        }\n      };\n    },\n\n    LimitsModel: function(DateUtils) {\n      return function LimitsModel(start, end) {\n\n        var exports = {\n          start: {},\n          end: {},\n          now: {}\n        };\n\n        function _setStart(dt) {\n          exports.start.d = DateUtils.getDay(+dt);\n          exports.start.m = DateUtils.getMonth(+dt);\n          exports.start.y = DateUtils.getYear(+dt);\n          exports.start.dt = +dt;\n          //TODO (S.Panfilov) Possible strict violation\n          return this;\n        }\n\n        function _setEnd(dt) {\n          exports.end.d = DateUtils.getDay(+dt);\n          exports.end.m = DateUtils.getMonth(+dt);\n          exports.end.y = DateUtils.getYear(+dt);\n          exports.end.dt = +dt;\n          //TODO (S.Panfilov) Possible strict violation\n          return this;\n        }\n\n        function _setNow() {\n          var dt = new Date().getTime();\n          exports.now.d = DateUtils.getDay(dt);\n          exports.now.m = DateUtils.getMonth(dt);\n          exports.now.y = DateUtils.getYear(dt);\n          exports.now.dt = dt;\n          //TODO (S.Panfilov) Possible strict violation\n          return this;\n        }\n\n        if (start) _setStart(start);\n        if (end) _setEnd(end);\n        _setNow();\n\n\n        return exports;\n      };\n    },\n\n    MonthUtils: function(CommonUtils, Config) {\n      return {\n        getMonthList: function(startDt, endDt, selectedYear, limitsModel) {\n          var result;\n          var START_MONTH = 0;\n          var END_MONTH = 11;\n\n          if (startDt || endDt) {\n            var isYearOfLowerLimit = (startDt) ? limitsModel.start.y === selectedYear : false;\n            var isYearOfUpperLimit = (endDt) ? limitsModel.end.y === selectedYear : false;\n            var start = (startDt) ? limitsModel.start.m : START_MONTH;\n            var end = (endDt) ? limitsModel.end.m : END_MONTH;\n\n            // startYear == 2015, nowYear == 2015, endYear == 2015\n            if (isYearOfLowerLimit && isYearOfUpperLimit) {\n              result = CommonUtils.getArrayOfNumbers(start, end);\n            } else if (isYearOfLowerLimit && !isYearOfUpperLimit) { // startYear == 2015, nowYear == 2015, endYear == 2016 (or null)\n              result = CommonUtils.getArrayOfNumbers(start, END_MONTH);\n            } else if (!isYearOfLowerLimit && isYearOfUpperLimit) { // startYear == 2014 (or null), nowYear == 2015, endYear == 2015\n              result = CommonUtils.getArrayOfNumbers(START_MONTH, end);\n            } else { // in all other cases return array of 12 month\n              result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n            }\n          } else { // in all other cases return array of 12 month\n            result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n          }\n\n          return CommonUtils.intArraySort(result, Config.monthDirection);\n        }\n      };\n    },\n\n    YearsUtils: function(CommonUtils, Config) {\n\n      function _getLatestPossibleYear(yearsCount, selectedYear, now) {\n        var result = (selectedYear > now) ? selectedYear : now;\n        result += (yearsCount - 1);\n        return result;\n      }\n\n      function _getFirstPossibleYear(yearsCount, selectedYear, now) {\n        var result = (selectedYear < now) ? selectedYear : now;\n        result -= (yearsCount - 1);\n        return result;\n      }\n\n      function _getRangeValues(selectedYear, startYear, endYear, nowYear) {\n\n        var YEARS_COUNT = Config.defaultYearsCount;\n        var latestPossibleYear = _getLatestPossibleYear(YEARS_COUNT, selectedYear, nowYear);\n        var firstPossibleYear = _getFirstPossibleYear(YEARS_COUNT, selectedYear, nowYear);\n\n        var statement = {\n          isBoth: !!(startYear && endYear),\n          isBothNot: !!(!startYear && !endYear),\n          isOnlyStart: !!(startYear && !endYear),\n          isOnlyEnd: !!(!startYear && endYear),\n          isStartLower: (startYear < endYear),\n          isEndLower: (startYear > endYear),\n          isStartEqualEnd: (startYear === endYear),\n          isEndUpperNow: (endYear > nowYear),\n          isEndEqualNow: (endYear === nowYear)\n        };\n\n        //start = 2011, end = 2014\n        if (statement.isBoth && statement.isStartLower) {\n          return {\n            from: startYear,\n            to: endYear\n          };\n        }\n\n        //start = 2014, end = 2011\n        if (statement.isBoth && statement.isEndLower) {\n          return {\n            from: endYear,\n            to: startYear\n          };\n        }\n\n        //start = 2011, end = 2011\n        if (statement.isBoth && statement.isStartEqualEnd) {\n          return {\n            from: startYear,\n            to: endYear\n          };\n        }\n\n        //start = 2014, end = null\n        if (statement.isOnlyStart) {\n          return {\n            from: startYear,\n            to: latestPossibleYear\n          };\n        }\n\n        //start = null, end = 2014\n        if (statement.isOnlyEnd) {\n          //start = null, now = 2013 (or 2014), end = 2014\n          if (statement.isEndUpperNow || statement.isEndEqualNow) {\n            //TODO (S.Panfilov) wtf? I cannot remember wtf this statement check\n            if ((firstPossibleYear - YEARS_COUNT) > (endYear - YEARS_COUNT)) {\n              return {\n                from: firstPossibleYear,\n                to: endYear\n              };\n            } else {\n              return {\n                from: endYear - (YEARS_COUNT - 1),\n                to: endYear\n              };\n            }\n          }\n\n          //start = null, now = 2015,  end = 2014\n          if (!statement.isEndUpperNow) {\n            return {\n              from: endYear - (YEARS_COUNT - 1),\n              to: endYear\n            };\n          }\n        }\n\n        //start = null, end = null\n        if (statement.isBothNot) {\n          return {\n            from: firstPossibleYear,\n            to: latestPossibleYear\n          };\n        }\n      }\n\n      var exports = {\n        getYearsList: function(selectedYear, startYear, endYear, nowYear) {\n          var range = _getRangeValues(selectedYear, startYear, endYear, nowYear);\n          var result = CommonUtils.getArrayOfNumbers(range.from, range.to);\n\n          return CommonUtils.intArraySort(result, Config.yearsDirection);\n        }\n      };\n\n\n      return exports;\n    }\n  };\n})();"],"sourceRoot":"/source/"}