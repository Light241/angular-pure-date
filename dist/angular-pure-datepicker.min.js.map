{"version":3,"sources":["angular-pure-datepicker.js"],"names":["angular","module","run","$templateCache","put","Settings","isUtc","monthDirection","daysDirection","yearsDirection","daysList","monthList","CommonUtils","exports","isValidNumber","num","isNumber","isNaN","isNotInfinity","isFinite","getArrayOfNumbers","start","end","result","i","push","intArraySort","arr","direction","desc","a","b","sort","getIntArr","length","_getIntArr","concat","DateUtils","getVal","datetime","method","date","Date","call","getDay","prototype","getUTCDate","getDate","getDayOfWeek","getUTCDay","getYear","getUTCFullYear","getFullYear","getMonth","getUTCMonth","getDaysInMonth","month","year","isValidModel","model","isDateUpperStartLimit","dt","startLimitTime","isDateLowerEndLimit","endLimitTime","isDateBetweenLimits","LimitsModel","startDt","endDt","_setStart","d","m","y","this","_setEnd","_setNow","getTime","now","DateModel","day","dayOfWeek","timezone","getTimezoneOffset","YearsUtils","getYearsList","startDateTime","endDateTime","selected","limitsModel","DEFAULT_YEARS_COUNT","selectedYear","latestPossibleYear","firstPossibleYear","yearsListDirection","MonthUtils","getMonthList","START_MONTH","END_MONTH","isYearOfLowerLimit","isYearOfUpperLimit","monthListDirection","DaysUtils","getDaysList","selectedMonth","START_DAY","lastDayInMonth","isMonthOfLowerLimit","isMonthOfUpperLimit","isLowerLimit","isUpperLimit","daysListDirection","DataClass","_getSelected","isBiggerThenStart","isEqualToStart","isLowerThenEnd","isEqualToEnd","_private","_start","_end","_limitDates","current","reloadYearsList","reloadMonthList","reloadDaysList","angularView","directive","restrict","replace","templateUrl","scope","ngModel","apdStart","apdEnd","apdDayId","apdMonthId","apdYearId","apdDayClasses","apdMonthClasses","apdYearClasses","apdLocalization","apdIsUtc","link","getLimitSafeDatetime","settings","updateModel","ngModelWatcher","stop","data","onModelChange","oldValue","getInitDateModel","initDatetime","isInitModelValid","limitSafeDatetime","_initData","initDateModel","handler","callback","$watch","value","onDaySelectChanged","onMonthSelectChanged","onYearSelectChanged"],"mappings":"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","file":"angular-pure-datepicker.min.js","sourcesContent":["angular.module(\"angular-pd.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"apd.html\",\"<div class=apd_root><select ng-model=data.selected.day ng-options=\\\"day for day in data.days\\\" ng-init=\\\"data.selected.day = data.days[0]\\\" ng-change=onDaySelectChanged(data.selected.day) id={{::apdDayId}} class=\\\"apd_elem apd_select_day apd_select {{::apdDayClasses}}\\\"></select><span ng-bind=daysList class=\\\"apd_elem apd_day_of_week\\\"></span><select ng-model=data.selected.month ng-options=\\\"month for month in data.month\\\" ng-init=\\\"data.selected.month = data.month[0]\\\" ng-change=onMonthSelectChanged(data.selected.month) id={{::apdMonthId}} class=\\\"apd_elem apd_select_month apd_select {{::apdMonthClasses}}\\\"></select><select ng-model=data.selected.year ng-options=\\\"year for year in data.years\\\" ng-init=\\\"data.selected.year = data.years[0]\\\" ng-change=onYearSelectChanged(data.selected.year) id={{::apdYearId}} class=\\\"apd_elem apd_select_year apd_select {{::apdYearClasses}}\\\"></select></div>\");}]);\n'use strict';\n\nvar Settings = {\n    isUtc: false,\n    monthDirection: 'asc',\n    daysDirection: 'asc',\n    yearsDirection: 'desc',\n    daysList: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    monthList: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar CommonUtils = (function () {\n    'use strict';\n\n    var exports = {\n        isValidNumber: function (num) {\n            var isNumber = !isNaN(num);\n            var isNotInfinity = isFinite(num);\n            return isNumber && isNotInfinity;\n        },\n        getArrayOfNumbers: function (start, end) {\n            var result = [];\n\n            for (var i = start; i <= end; i++) {\n                result.push(i);\n            }\n\n            return result;\n        },\n        intArraySort: function (arr, direction) {\n            function desc(a, b) {\n                return b - a;\n            }\n\n            switch (direction) {\n                default:\n                    return arr.sort(function (a, b) {\n                        return a - b;\n                    });\n                case \"desc\":\n                    return arr.sort(desc);\n            }\n        },\n        getIntArr: function (length) {\n            if (!length && length !== 0) return;\n            return length ? exports._getIntArr(length - 1).concat(length) : [];\n        }\n    };\n\n    return exports;\n})();\nvar DateUtils = (function (Settings) {\n    'use strict';\n\n    function getVal(datetime, method) {\n        var date = new Date(datetime);\n        return method.call(date);\n    }\n\n    var exports = {\n        getDay: function (datetime) {\n            var method = (Settings.isUTC) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return getVal(datetime, method);\n        },\n        getDayOfWeek: function (datetime) {\n            var method = (Settings.isUTC) ? Date.prototype.getUTCDay : Date.prototype.getDay;\n            return getVal(datetime, method);\n        },\n        getYear: function (datetime) {\n            var method = (Settings.isUTC) ? Date.prototype.getUTCFullYear : Date.prototype.getFullYear;\n            return getVal(datetime, method);\n        },\n        getMonth: function (datetime) {\n            var method = (Settings.isUTC) ? Date.prototype.getUTCMonth : Date.prototype.getMonth;\n            return getVal(datetime, method);\n        },\n        getDaysInMonth: function (month, year) {\n            return new Date(year, month + 1, 0).getDate();\n        },\n        isValidModel: function (model) {\n            return !!model && (!!model.datetime || model.datetime === 0);\n        },\n        isDateUpperStartLimit: function (dt, startLimitTime) {\n            if (!startLimitTime) return true;\n            return (dt > startLimitTime);\n        },\n        isDateLowerEndLimit: function (dt, endLimitTime) {\n            if (!endLimitTime) return true;\n            return (dt < endLimitTime);\n        },\n        isDateBetweenLimits: function (dt, startLimitTime, endLimitTime) {\n            return (exports.isDateUpperStartLimit(dt, startLimitTime) && exports.isDateLowerEndLimit(dt, endLimitTime));\n        }\n    };\n\n    return exports;\n})(Settings);\nvar LimitsModel = (function (DateUtils) {\n    'use strict';\n\n    function LimitsModel(startDt, endDt) {\n\n        var exports = {\n            start: {},\n            end: {},\n            now: {}\n        };\n\n        function _setStart(dt) {\n            exports.start.d = DateUtils.getDay(dt);\n            exports.start.m = DateUtils.getMonth(dt);\n            exports.start.y = DateUtils.getYear(dt);\n            exports.start.dt = dt;\n            return this;\n        }\n\n        function _setEnd(dt) {\n            exports.end.d = DateUtils.getDay(dt);\n            exports.end.m = DateUtils.getMonth(dt);\n            exports.end.y = DateUtils.getYear(dt);\n            exports.end.dt = dt;\n            return this;\n        }\n\n        function _setNow() {\n            var dt = new Date().getTime();\n            exports.now.d = DateUtils.getDay(dt);\n            exports.now.m = DateUtils.getMonth(dt);\n            exports.now.y = DateUtils.getYear(dt);\n            exports.now.dt = dt;\n            return this;\n        }\n\n        _setStart(startDt);\n        _setEnd(endDt);\n        _setNow();\n        \n        return exports;\n    }\n    \n    return LimitsModel;\n})(DateUtils);\nvar DateModel = (function (DateUtils) {\n    'use strict';\n\n    function DateModel(datetime) {\n        this.day = DateUtils.getDay(datetime);\n        this.dayOfWeek = DateUtils.getDayOfWeek(datetime);\n        this.month = DateUtils.getMonth(datetime);\n        this.year = DateUtils.getYear(datetime);\n        this.datetime = datetime;\n        this.timezone = new Date(datetime).getTimezoneOffset();\n\n        return this;\n    }\n\n    return DateModel;\n})(DateUtils);\nvar YearsUtils = (function (DateUtils, CommonUtils, Settings) {\n    'use strict';\n\n    var exports = {\n        getYearsList: function (startDateTime, endDateTime, selected, limitsModel) {\n            var result = [];\n            var DEFAULT_YEARS_COUNT = 10;\n\n            var start = limitsModel.start.y;\n            var end = limitsModel.end.y;\n            var now = limitsModel.now.y;\n            var selectedYear = DateUtils.getYear(selected.dt);\n            var latestPossibleYear = (selectedYear > now) ? selectedYear : now;\n            var firstPossibleYear = (selectedYear < now) ? selectedYear : now;\n            latestPossibleYear = latestPossibleYear + (DEFAULT_YEARS_COUNT - 1);\n            firstPossibleYear = firstPossibleYear - (DEFAULT_YEARS_COUNT - 1);\n\n            //start = 2011, end = 2014\n            if ((startDateTime && endDateTime) && (startDateTime < endDateTime)) {\n                result = CommonUtils.getArrayOfNumbers(start, end);\n            }\n\n            //start = 2014, end = 2011\n            else if ((startDateTime && endDateTime) && (startDateTime > endDateTime)) {\n                result = CommonUtils.getArrayOfNumbers(end, start);\n            }\n\n            //start = 2011, end = 2011\n            else if ((startDateTime && endDateTime) && (startDateTime === endDateTime)) {\n                result = CommonUtils.getArrayOfNumbers(start, end);\n            }\n\n            //start = 2014, end = null\n            else if (startDateTime && !endDateTime) {\n                result = CommonUtils.getArrayOfNumbers(start, latestPossibleYear);\n            }\n\n            //start = null, end = 2014\n            else if (!startDateTime && endDateTime) {\n                //now = 2013 (or 2014),  end = 2014\n                if (limitsModel.end.y >= limitsModel.now.y) {\n\n                    if ((firstPossibleYear - DEFAULT_YEARS_COUNT) > (end - DEFAULT_YEARS_COUNT)) {\n                        result = CommonUtils.getArrayOfNumbers(firstPossibleYear, end);\n                    } else {\n                        result = CommonUtils.getArrayOfNumbers(end - (DEFAULT_YEARS_COUNT - 1), end);\n                    }\n\n                }\n                //now = 2015,  end = 2014\n                else if (limitsModel.end.y > limitsModel.now.y) {\n                    result = CommonUtils.getArrayOfNumbers(end - (DEFAULT_YEARS_COUNT - 1), end);\n                }\n\n            }\n\n            //start = null, end = null\n            else if (!startDateTime && !endDateTime) {\n                result = CommonUtils.getArrayOfNumbers(firstPossibleYear, latestPossibleYear);\n            }\n\n            return CommonUtils.intArraySort(result, Settings.yearsListDirection);\n        }\n    };\n\n    return exports;\n})(DateUtils, CommonUtils, Settings);\nvar MonthUtils = (function (LimitsModel, DateUtils, CommonUtils, Settings) {\n    'use strict';\n\n    var exports = {\n        getMonthList: function (startDateTime, endDateTime, selectedYear) {\n            var result;\n            var START_MONTH = 0;\n            var END_MONTH = 11;\n\n            //TODO (S.Panfilov)  check\n            if (startDateTime || endDateTime) {\n                var isYearOfLowerLimit = (startDateTime) ? LimitsModel.start.y === selectedYear : false;\n                var isYearOfUpperLimit = (endDateTime) ? LimitsModel.end.y === selectedYear : false;\n                var start = (startDateTime) ? LimitsModel.start.m : START_MONTH;\n                var end = (endDateTime) ? LimitsModel.end.m : END_MONTH;\n\n                // startYear == 2015, nowYear == 2015, endYear == 2015\n                if (isYearOfLowerLimit && isYearOfUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, end);\n                }\n                // startYear == 2015, nowYear == 2015, endYear == 2016 (or null)\n                else if (isYearOfLowerLimit && !isYearOfUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, END_MONTH);\n                }\n                // startYear == 2014 (or null), nowYear == 2015, endYear == 2015\n                else if (!isYearOfLowerLimit && isYearOfUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(START_MONTH, end);\n                }\n                else {\n                    // in all other cases return array of 12 month\n                    result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n                }\n            } else {\n                // in all other cases return array of 12 month\n                result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n            }\n\n            return CommonUtils.intArraySort(result, Settings.monthListDirection);\n        }\n    };\n\n    return exports;\n})(LimitsModel, DateUtils, CommonUtils, Settings);\nvar DaysUtils = (function (LimitsModel, DateUtils, CommonUtils, Settings) {\n    'use strict';\n\n    var exports = {\n        getDaysList: function (startDateTime, endDateTime, selectedYear, selectedMonth) {\n            var result;\n            var START_DAY = 1;\n            var lastDayInMonth = DateUtils.getDaysInMonth(selectedMonth, selectedYear);\n\n            //TODO (S.Panfilov)  check\n            if (startDateTime || endDateTime) {\n                var isYearOfLowerLimit = (startDateTime) ? LimitsModel.start.y === selectedYear : false;\n                var isYearOfUpperLimit = (endDateTime) ? LimitsModel.end.y === selectedYear : false;\n                var isMonthOfLowerLimit = (startDateTime) ? LimitsModel.start.m === selectedMonth : false;\n                var isMonthOfUpperLimit = (endDateTime) ? LimitsModel.end.m === selectedMonth : false;\n\n                var isLowerLimit = (isYearOfLowerLimit && isMonthOfLowerLimit);\n                var isUpperLimit = (isYearOfUpperLimit && isMonthOfUpperLimit);\n\n                var start = (startDateTime) ? LimitsModel.start.d : START_DAY;\n                var end = (endDateTime) ? LimitsModel.end.d : lastDayInMonth;\n\n                if (isLowerLimit && isUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, end);\n                } else if (isLowerLimit && !isUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, lastDayInMonth);\n                } else if (!isLowerLimit && isUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(START_DAY, end);\n                } else {\n                    // in all other cases return array of 12 month\n                    result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n                }\n            } else {\n                // in all other cases return array of 12 month\n                result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n            }\n\n            return CommonUtils.intArraySort(result, Settings.daysListDirection);\n        }\n    };\n\n    return exports;\n})(LimitsModel, DateUtils, CommonUtils, Settings);\nvar DataClass = (function (DateUtils, CommonUtils, YearsUtils, MonthUtils, DaysUtils, DateModel) {\n    'use strict';\n\n    function _getSelected(selected, startDateTime, endDateTime) {\n        var result;\n\n        var isBiggerThenStart = (selected.dt > startDateTime);\n        var isEqualToStart = (selected.dt === startDateTime);\n        var isLowerThenEnd = (selected.dt > endDateTime);\n        var isEqualToEnd = (selected.dt === endDateTime);\n\n        //start == 1; selected == 1 or 2 or 3; end == 3;\n        if ((isBiggerThenStart || isEqualToStart) || (isLowerThenEnd || isEqualToEnd)) {\n            result = new DateModel(selected.dt);\n        } else\n        //start == 1; selected == 0\n        if (!isBiggerThenStart) {\n            result = new DateModel(startDateTime);\n        } else\n        //selected == 4; end == 3;\n        if (!isBiggerThenStart) {\n            result = new DateModel(endDateTime);\n        }\n        //paranoid case\n        else {\n            result = new DateModel(new Date().getTime());\n        }\n\n        return result;\n    }\n\n    return function (selected, startDateTime, endDateTime) {\n\n        var _private = {\n            _start: null,\n            _end: null,\n            _limitDates: null\n        };\n\n        var exports = {\n            selected: {},\n            current: {\n                y: null,\n                m: null,\n                d: null\n            },\n            reloadYearsList: function () {\n                exports.current.y = YearsUtils.getYearsList(_private._start, _private._end);\n                return this;\n            },\n            reloadMonthList: function () {\n                var selectedYear = DateUtils.getYear(exports.selected.dt);\n                exports.current.m = MonthUtils.getMonthList(_private._start, _private._end, selectedYear);\n                return this;\n            },\n            reloadDaysList: function () {\n                var selectedYear = DateUtils.getYear(exports.selected.dt);\n                var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n                exports.current.d = DaysUtils.getDaysList(_private._start, _private._end, selectedYear, selectedMonth);\n                return this;\n            }\n        };\n\n        selected.dt = CommonUtils.isValidNumber(selected.dt) ? selected.dt : null;\n        startDateTime = CommonUtils.isValidNumber(startDateTime) ? startDateTime : null;\n        endDateTime = CommonUtils.isValidNumber(endDateTime) ? endDateTime : null;\n\n        exports.selected = _getSelected(selected, startDateTime, endDateTime);\n        var selectedYear = DateUtils.getYear(exports.selected.dt);\n        var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n\n        _private._limitDates = new LimitsModel(startDateTime, endDateTime);\n        _private._start = startDateTime;\n        _private._end = endDateTime;\n        exports.current.y = YearsUtils.getYearsList(startDateTime, endDateTime, exports.selected, _private._limitDates);\n        exports.current.m = MonthUtils.getMonthList(startDateTime, endDateTime, selectedYear, _private._limitDates);\n        exports.current.d = DaysUtils.getDaysList(startDateTime, endDateTime, selectedYear, selectedMonth, exports.selected, _private._limitDates);\n\n        return this;\n    }\n\n})(DateUtils, CommonUtils, YearsUtils, MonthUtils, DaysUtils, DateModel);\nvar angularView = (function (DateUtils, DataClass, Settings) {\n    'use strict';\n\n\n    angular.module('angular-pd', [\n        'angular-pd.templates'\n    ])\n\n        .directive('pureDatepicker', function () {\n            return {\n                restrict: 'E',\n                replace: true,\n                templateUrl: 'apd.html',\n                scope: {\n                    ngModel: '=',\n                    apdStart: '=?',\n                    apdEnd: '=?',\n                    apdDayId: '@?',\n                    apdMonthId: '@?',\n                    apdYearId: '@?',\n                    apdDayClasses: '@?',\n                    apdMonthClasses: '@?',\n                    apdYearClasses: '@?',\n                    apdLocalization: '=?',\n                    apdIsUtc: '=?'\n                },\n                link: function (scope) {\n\n                    scope.apdIsUtc = scope.apdIsUtc || false;\n\n                    //TODO (S.Panfilov) check for cross-browser support\n                    //TODO (S.Panfilov) may be should add tests\n                    var settings = {\n                        initDateModel: null,\n                        startDateTime: null,\n                        endDateTime: null\n                    };\n\n                    var ngModelWatcher = {\n                        handler: null,\n                        start: function (callback) {\n                            ngModelWatcher.handler = scope.$watch('ngModel.datetime', function (value, oldValue) {\n                                if (callback) {\n                                    callback(value, oldValue)\n                                }\n\n                            }, true);\n                        },\n                        stop: function () {\n                            ngModelWatcher.handler();\n                            return true;\n                        }\n                    };\n\n\n                    function getLimitSafeDatetime(day, month, year) {\n\n                        var datetime = new Date(year, month, day).getTime();\n\n                        if (!DateUtils.isDateBetweenLimits(datetime, settings.startDateTime, settings.endDateTime)) {\n                            if (!DateUtils.isDateUpperStartLimit(datetime, settings.startDateTime)) {\n                                datetime = settings.startDateTime;\n                            } else if (!DateUtils.isDateLowerEndLimit(datetime, settings.endDateTime)) {\n                                datetime = settings.endDateTime;\n                            }\n                        }\n\n                        return datetime;\n                    }\n\n                    function updateModel(datetime) {\n                        ngModelWatcher.stop();\n                        scope.data.selected = new DateModel(datetime, scope.apdIsUtc);\n                        scope.ngModel = scope.data.selected;\n                        ngModelWatcher.start(onModelChange);\n                    }\n\n                    function onModelChange(datetime, oldValue) {\n                        if (datetime === oldValue) {\n                            return;\n                        }\n\n                        var day = DateUtils.getDay(datetime, scope.apdIsUtc);\n                        var month = DateUtils.getMonth(datetime, scope.apdIsUtc);\n                        var year = DateUtils.getYear(datetime, scope.apdIsUtc);\n\n                        datetime = getLimitSafeDatetime(day, month, year);\n                        updateModel(datetime);\n\n                        scope.data.reloadYearsList();\n                        scope.data.reloadMonthList();\n                        scope.data.reloadDaysList();\n                    }\n\n                    function getInitDateModel(model) {\n                        var isInitModelValid = DateUtils.isValidModel(model);\n                        var initDatetime;\n\n                        if (isInitModelValid) {\n                            initDatetime = model.datetime\n                        } else {\n                            initDatetime = new Date().getTime();\n                        }\n\n                        var day = DateUtils.getDay(initDatetime, scope.apdIsUtc);\n                        var month = DateUtils.getMonth(initDatetime, scope.apdIsUtc);\n                        var year = DateUtils.getYear(initDatetime, scope.apdIsUtc);\n\n                        var limitSafeDatetime = getLimitSafeDatetime(day, month, year);\n\n                        return new DateModel(limitSafeDatetime, scope.apdIsUtc);\n                    }\n\n                    function _initData(initDateModel, startDateTime, endDateTime) {\n                        scope.data = new DataClass(initDateModel, startDateTime, endDateTime, scope.apdIsUtc);\n                        scope.ngModel = scope.data.selected;\n                    }\n\n\n                    scope.onDaySelectChanged = function (day) {\n                        if (!day) return;\n\n                        var datetime = getLimitSafeDatetime(scope.data.selected.day, scope.data.selected.month, scope.data.selected.year);\n                        updateModel(datetime);\n                    };\n\n                    scope.onMonthSelectChanged = function (month) {\n                        if (!month && month !== 0) return;\n\n                        var datetime;\n                        var year = scope.data.selected.year;\n                        var day = scope.data.selected.day;\n\n                        datetime = getLimitSafeDatetime(day, month, year);\n                        updateModel(datetime);\n\n                        scope.data.reloadDaysList();\n                    };\n\n                    scope.onYearSelectChanged = function (year) {\n                        if (!year && year !== 0) return;\n\n                        var month = scope.data.selected.month;\n                        var day = scope.data.selected.day;\n\n                        var datetime = getLimitSafeDatetime(day, month, year);\n                        updateModel(datetime);\n\n                        scope.data.reloadMonthList();\n                        scope.data.reloadDaysList();\n                    };\n\n                    (function _init() {\n                        settings.startDateTime = (scope.apdStart) ? +scope.apdStart : null;\n                        settings.endDateTime = (scope.apdEnd) ? +scope.apdEnd : null;\n                        settings.initDateModel = getInitDateModel(scope.ngModel);\n                        _initData(settings.initDateModel, settings.startDateTime, settings.endDateTime);\n\n                        var localization = scope.apdLocalization || null;\n                        //var week = new DaysClass(localization);\n                        //var year = new MonthClass(localization);\n                        scope.daysList = Settings.daysList;\n                        scope.monthList = Settings.monthList;\n\n                        ngModelWatcher.start(onModelChange);\n                    })();\n\n                }\n            }\n        });\n})(DateUtils, DataClass, Settings);"],"sourceRoot":"/source/"}