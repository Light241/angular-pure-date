{"version":3,"sources":["angular-pure-datepicker.js"],"names":["angular","module","run","$templateCache","put","apd","directive","DayOfWeek","name","short","this","DaysOfWeek","days","_this","getListOfShorts","result","i","list","length","dayOfWeek","push","getListOfNames","getDayOfWeekShortName","dayNum","shorts","getDayOfWeekName","names","daysOfWeek","DateUtilsFactory","MessagesFactory","restrict","replace","templateUrl","scope","ngModel","apdStart","apdEnd","apdDayId","apdMonthId","apdYearId","apdDayClasses","apdMonthClasses","apdYearClasses","link","init","initDate","getInitDate","startDateTime","endDateTime","data","createData","selected","isInitialized","reloadDaysCount","datetime","throwInvalidParamsMessage","date","Date","getDaysNumberArr","getMonth","getFullYear","reloadSelectedDay","daysInSelectedMonth","getDaysInMonth","day","getDay","getTime","isReInitializing","$watch","value","oldValue","month","year","messages","MessagesFactoryClass","throwModelValidationMessage","field","throwDeveloperError","invalidDateModel","invalidParams","message","console","error","factory","dateUtils","DateModelClass","timezone","DateModelValidatorClass","config","isFieldExist","model","fieldName","validator","isZero","isZeroAllowed","isValid","hasOwnProperty","isRequired","isFieldValid","DateModelFieldClass","DateModelValidatorConfigClass","object","DataClass","_getArrayOfNumbers","start","end","_getFullYear","_getMonth","_getDaysCount","getDate","_getNumList","timeFunc","callback","_getIntArr","concat","self","daysCount","years","allowZero","preserveModelValues","dateModelValidatorConfig","dateModelValidator","exports","validateModel","isValidModel","dateTime","getTimezoneOffset"],"mappings":"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","file":"angular-pure-datepicker.min.js","sourcesContent":["angular.module(\"angular-pd.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"apd.html\",\"<div class=apd_root><select ng-model=data.selected.day ng-options=\\\"day for day in data.days\\\" ng-init=\\\"data.selected.day = data.days[0]\\\" id={{::apdDayId}} class=\\\"apd_elem apd_select_day apd_select {{::apdDayClasses}}\\\"></select><span title={{getDayOfWeekName(data.selected.dayOfWeek)}} ng-bind=getDayOfWeekShortName(data.selected.dayOfWeek) class=\\\"apd_elem apd_day_of_week\\\"></span><select ng-model=data.selected.month ng-options=\\\"(month + 1) for month in data.month\\\" ng-init=\\\"data.selected.month = data.month[0]\\\" id={{::apdMonthId}} class=\\\"apd_elem apd_select_month apd_select {{::apdMonthClasses}}\\\"></select><select ng-model=data.selected.year ng-options=\\\"year for year in data.years\\\" ng-init=\\\"data.selected.year = data.years[0]\\\" id={{::apdYearId}} class=\\\"apd_elem apd_select_year apd_select {{::apdYearClasses}}\\\"></select></div>\");}]);\n//module apd.main {\n//    'use strict';\nangular.module('angular-pd', [\n    'angular-pd.datepicker',\n    'angular-pd.date_utils',\n    'angular-pd.messages'\n]);\n//} \n\n/// <reference path=\"main.ts\" />\n//TODO (S.Panfilov)  is this references necessary?\nvar apd;\n(function (apd) {\n    var directive;\n    (function (directive) {\n        'use strict';\n        var DayOfWeek = (function () {\n            function DayOfWeek(name, short) {\n                this.name = name;\n                this.short = short;\n            }\n            return DayOfWeek;\n        })();\n        var DaysOfWeek = (function () {\n            function DaysOfWeek(days) {\n                var _this = this;\n                this.getListOfShorts = function () {\n                    var result = [];\n                    for (var i = 0; i < _this.list.length; i++) {\n                        var dayOfWeek = _this.list[i];\n                        result.push(dayOfWeek.short);\n                    }\n                    return result;\n                };\n                this.getListOfNames = function () {\n                    var result = [];\n                    for (var i = 0; i < _this.list.length; i++) {\n                        var dayOfWeek = _this.list[i];\n                        result.push(dayOfWeek.name);\n                    }\n                    return result;\n                };\n                this.getDayOfWeekShortName = function (dayNum) {\n                    return _this.shorts[dayNum];\n                };\n                this.getDayOfWeekName = function (dayNum) {\n                    return _this.names[dayNum];\n                };\n                this.list = days;\n                this.shorts = this.getListOfShorts();\n                this.names = this.getListOfNames();\n            }\n            return DaysOfWeek;\n        })();\n        var daysOfWeek = new DaysOfWeek([\n            new DayOfWeek('Sunday', 'Sun'),\n            new DayOfWeek('Monday', 'Mon'),\n            new DayOfWeek('Tuesday', 'Tue'),\n            new DayOfWeek('Wednesday', 'Wed'),\n            new DayOfWeek('Thursday', 'Thu'),\n            new DayOfWeek('Friday', 'Fri'),\n            new DayOfWeek('Saturday', 'Sat')\n        ]);\n        angular.module('angular-pd.datepicker', [\n            'angular-pd.templates'\n        ]).directive('pureDatepicker', ['DateUtilsFactory', 'MessagesFactory', function (DateUtilsFactory, MessagesFactory) {\n            return {\n                restrict: 'E',\n                replace: true,\n                templateUrl: 'apd.html',\n                scope: {\n                    ngModel: '=',\n                    apdStart: '=?',\n                    apdEnd: '=?',\n                    apdDayId: '@?',\n                    apdMonthId: '@?',\n                    apdYearId: '@?',\n                    apdDayClasses: '@?',\n                    apdMonthClasses: '@?',\n                    apdYearClasses: '@?'\n                },\n                link: function (scope) {\n                    var isInitialized = false;\n                    var isReInitializing = false;\n                    function init() {\n                        var initDate = DateUtilsFactory.getInitDate(scope.ngModel);\n                        var startDateTime = (scope.apdStart) ? +scope.apdStart : null;\n                        var endDateTime = (scope.apdEnd) ? +scope.apdEnd : null;\n                        scope.data = DateUtilsFactory.createData(initDate, startDateTime, endDateTime);\n                        scope.ngModel = scope.data.selected;\n                        isInitialized = true;\n                    }\n                    scope.$watch('ngModel.datetime', function (value, oldValue) {\n                        if (isInitialized && (value === oldValue)) {\n                            return;\n                        }\n                        isReInitializing = true;\n                        init();\n                        isReInitializing = false;\n                    }, true);\n                    scope.$watch('data.selected.day', function (day) {\n                        if (!day && !isReInitializing)\n                            return;\n                        reloadSelectedDay(scope.data.selected.datetime);\n                    });\n                    scope.$watch('data.selected.month', function (month) {\n                        if (!month && month !== 0 && !isReInitializing)\n                            return;\n                        reloadDaysCount(scope.data.selected.datetime);\n                        reloadSelectedDay(scope.data.selected.datetime);\n                    });\n                    scope.$watch('data.selected.year', function (year) {\n                        if (!year && !isReInitializing)\n                            return;\n                        reloadDaysCount(scope.data.selected.datetime);\n                        reloadSelectedDay(scope.data.selected.datetime);\n                    });\n                    function reloadDaysCount(datetime) {\n                        if (!datetime && datetime !== 0) {\n                            MessagesFactory.throwInvalidParamsMessage();\n                            return false;\n                        }\n                        var date = new Date(datetime);\n                        scope.data.days = scope.data.getDaysNumberArr(date.getMonth(), date.getFullYear());\n                    }\n                    function reloadSelectedDay(datetime) {\n                        if (!datetime && datetime !== 0) {\n                            MessagesFactory.throwInvalidParamsMessage();\n                            return false;\n                        }\n                        var date = new Date(datetime);\n                        var daysInSelectedMonth = scope.data.getDaysInMonth(date.getMonth(), date.getFullYear());\n                        if (scope.data.selected.day > daysInSelectedMonth) {\n                            scope.data.selected.day = daysInSelectedMonth;\n                        }\n                        scope.data.selected.dayOfWeek = date.getDay();\n                        scope.data.selected.datetime = date.getTime() * 1000;\n                    }\n                    scope.getDayOfWeekShortName = daysOfWeek.getDayOfWeekShortName;\n                    scope.getDayOfWeekName = daysOfWeek.getDayOfWeekName;\n                }\n            };\n        }]);\n    })(directive = apd.directive || (apd.directive = {}));\n})(apd || (apd = {}));\n\nvar apd;\n(function (apd) {\n    var messages;\n    (function (messages) {\n        'use strict';\n        var MessagesFactoryClass = (function () {\n            function MessagesFactoryClass() {\n            }\n            MessagesFactoryClass.throwModelValidationMessage = function (field) {\n                //TODO (S.Panfilov) possibly problems with this\n                this.throwDeveloperError(this.messages.invalidDateModel + ': error on field \\\"' + field + '+\\\"');\n            };\n            MessagesFactoryClass.throwInvalidParamsMessage = function () {\n                //TODO (S.Panfilov) possibly problems with this\n                this.throwDeveloperError(this.messages.invalidParams);\n            };\n            MessagesFactoryClass.messages = {\n                invalidParams: 'Invalid params',\n                invalidDateModel: 'Invalid date model'\n            };\n            MessagesFactoryClass.throwDeveloperError = function (message) {\n                console.error(message);\n            };\n            return MessagesFactoryClass;\n        })();\n        angular.module('angular-pd.messages', []).factory('MessagesFactory', function () {\n            return new MessagesFactoryClass();\n        });\n    })(messages = apd.messages || (apd.messages = {}));\n})(apd || (apd = {}));\n\n/// <reference path=\"messages.ts\" />\nvar apd;\n(function (apd) {\n    var dateUtils;\n    (function (dateUtils) {\n        'use strict';\n        var DateModelClass = (function () {\n            function DateModelClass(day, dayOfWeek, month, year, datetime, timezone) {\n                this.day = day;\n                this.dayOfWeek = dayOfWeek;\n                this.month = month;\n                this.year = year;\n                this.datetime = datetime;\n                this.timezone = timezone;\n            }\n            return DateModelClass;\n        })();\n        var DateModelValidatorClass = (function () {\n            function DateModelValidatorClass(config) {\n                var _this = this;\n                this.isFieldExist = function (model, fieldName) {\n                    var validator = _this;\n                    var isZero = (model[fieldName] === 0);\n                    var isZeroAllowed = validator[fieldName].isZeroAllowed;\n                    if (isZero && !isZeroAllowed) {\n                        return false;\n                    }\n                    if (!model[fieldName]) {\n                        return false;\n                    }\n                    return true;\n                };\n                this.isValid = function (model) {\n                    var validator = _this;\n                    if (!model)\n                        return false;\n                    for (var fieldName in validator) {\n                        if (validator.hasOwnProperty(fieldName)) {\n                            if (validator[fieldName].isRequired) {\n                                var isFieldValid = validator.isFieldExist(model, fieldName);\n                                if (!isFieldValid) {\n                                    return false;\n                                }\n                            }\n                        }\n                    }\n                    return true;\n                };\n                this.day = new DateModelFieldClass(config.day.name, config.day.isZeroAllowed, config.day.isRequired);\n                this.dayOfWeek = new DateModelFieldClass(config.dayOfWeek.name, config.dayOfWeek.isZeroAllowed, config.dayOfWeek.isRequired);\n                this.month = new DateModelFieldClass(config.month.name, config.month.isZeroAllowed, config.month.isRequired);\n                this.year = new DateModelFieldClass(config.year.name, config.year.isZeroAllowed, config.year.isRequired);\n                this.datetime = new DateModelFieldClass(config.datetime.name, config.datetime.isZeroAllowed, config.datetime.isRequired);\n                this.timezone = new DateModelFieldClass(config.timezone.name, config.timezone.isZeroAllowed, config.timezone.isRequired);\n            }\n            return DateModelValidatorClass;\n        })();\n        var DateModelValidatorConfigClass = (function () {\n            //TODO (S.Panfilov) any?\n            function DateModelValidatorConfigClass(object) {\n                this.day = object.day;\n                this.dayOfWeek = object.dayOfWeek;\n                this.month = object.month;\n                this.year = object.year;\n                this.datetime = object.datetime;\n                this.timezone = object.timezone;\n            }\n            return DateModelValidatorConfigClass;\n        })();\n        var DataClass = (function () {\n            function DataClass(selected, startDateTime, endDateTime) {\n                var _this = this;\n                this._getArrayOfNumbers = function (start, end) {\n                    var result = [];\n                    for (var i = start; i <= end; i++) {\n                        result.push(i);\n                    }\n                    return result;\n                };\n                this._getFullYear = function (date) {\n                    return date.getFullYear();\n                };\n                this._getMonth = function (date) {\n                    return date.getMonth();\n                };\n                this._getDaysCount = function (date) {\n                    return date.getDate();\n                };\n                //TODO (S.Panfilov) not any, but functions types\n                this._getNumList = function (startDateTime, endDateTime, timeFunc, callback) {\n                    var result = [];\n                    var now;\n                    var start;\n                    var end;\n                    //start = 2011, end = 2014\n                    if ((startDateTime && endDateTime) && (startDateTime < endDateTime)) {\n                        start = timeFunc(new Date(startDateTime));\n                        end = timeFunc(new Date(endDateTime));\n                        result = this._getArrayOfNumbers(start, end);\n                    }\n                    else if ((startDateTime && endDateTime) && (startDateTime > endDateTime)) {\n                        start = timeFunc(new Date(endDateTime));\n                        end = timeFunc(new Date(startDateTime));\n                        //TODO (S.Panfilov) throw warning here, that dates inverted\n                        //apd.messages.MessagesFactoryClass.throwMessage('asdsadasd');\n                        result = this._getArrayOfNumbers(start, end);\n                    }\n                    else if ((startDateTime && endDateTime) && (startDateTime === endDateTime)) {\n                        start = timeFunc(new Date(startDateTime));\n                        result = this._getArrayOfNumbers(start, start);\n                    }\n                    else if (startDateTime && !endDateTime) {\n                        start = timeFunc(new Date(startDateTime));\n                        result = this._getArrayOfNumbers(start, start);\n                    }\n                    else if (!startDateTime && endDateTime) {\n                        end = timeFunc(new Date(endDateTime));\n                        result = this._getArrayOfNumbers(end, end);\n                    }\n                    else if (!startDateTime && !endDateTime) {\n                        if (callback)\n                            return callback(timeFunc);\n                    }\n                    return result;\n                };\n                this._getIntArr = function (length) {\n                    if (!length && length !== 0) {\n                        //apd.messages.MessagesFactoryClass.throwInvalidParamsMessage();\n                        return false;\n                    }\n                    return length ? this._getIntArr(length - 1).concat(length) : [];\n                };\n                this.getDaysNumberArr = function (month, year) {\n                    if ((!month && month !== 0) || !year) {\n                        //apd.messages.MessagesFactoryClass.throwInvalidParamsMessage();\n                        return false;\n                    }\n                    return _this._getIntArr(_this.getDaysInMonth(month, year));\n                };\n                this.getDaysInMonth = function (month, year) {\n                    return new Date(year, month + 1, 0).getDate();\n                };\n                var self = this;\n                self.selected = selected;\n                self.days = self._getNumList(startDateTime, endDateTime, self._getDaysCount, function () {\n                    var daysCount = self._getDaysCount(new Date());\n                    return self._getIntArr(daysCount);\n                });\n                self.month = self._getNumList(startDateTime, endDateTime, self._getMonth, function () {\n                    return self._getArrayOfNumbers(0, 11);\n                });\n                self.years = self._getNumList(startDateTime, endDateTime, self._getFullYear, function () {\n                    return [new Date().getFullYear()];\n                });\n            }\n            return DataClass;\n        })();\n        var DateModelFieldClass = (function () {\n            function DateModelFieldClass(name, allowZero, isRequired) {\n                this.name = name;\n                this.isZeroAllowed = allowZero;\n                this.isRequired = isRequired;\n            }\n            return DateModelFieldClass;\n        })();\n        angular.module('angular-pd.date_utils', []).factory('DateUtilsFactory', ['MessagesFactory', function (MessagesFactory) {\n            var dateModelValidatorConfig = new DateModelValidatorConfigClass({\n                day: { name: 'day', isZeroAllowed: false, isRequired: false },\n                dayOfWeek: { name: 'day', isZeroAllowed: false, isRequired: false },\n                month: { name: 'day', isZeroAllowed: true, isRequired: false },\n                year: { name: 'day', isZeroAllowed: false, isRequired: false },\n                datetime: { name: 'day', isZeroAllowed: true, isRequired: true },\n                timezone: { name: 'day', isZeroAllowed: true, isRequired: false }\n            });\n            var dateModelValidator = new DateModelValidatorClass(dateModelValidatorConfig);\n            function preserveModelValues(model) {\n                for (var value in model) {\n                    if (model.hasOwnProperty(value)) {\n                        model[value] = +model[value];\n                    }\n                }\n                return model;\n            }\n            var exports = {\n                createData: function (selected, startDateTime, endDateTime) {\n                    return new DataClass(selected, startDateTime, endDateTime);\n                },\n                validateModel: function (model) {\n                    return dateModelValidator.isValid(model);\n                },\n                getInitDate: function (model) {\n                    var isValidModel = exports.validateModel(model);\n                    if (isValidModel) {\n                        return preserveModelValues(model);\n                    }\n                    else {\n                        var date = new Date();\n                        var day = date.getDate();\n                        var month = date.getMonth();\n                        var year = date.getFullYear();\n                        var dateTime = date.getTime();\n                        var dayOfWeek = date.getDay();\n                        var timezone = date.getTimezoneOffset();\n                        return new DateModelClass(day, dayOfWeek, month, year, dateTime, timezone);\n                    }\n                }\n            };\n            return exports;\n        }]);\n    })(dateUtils = apd.dateUtils || (apd.dateUtils = {}));\n})(apd || (apd = {}));\n"],"sourceRoot":"/source/"}