{"version":3,"sources":["angular-pure-datepicker.js"],"names":["angular","module","run","$templateCache","put","Settings","isUtc","monthDirection","daysDirection","yearsDirection","daysList","monthList","CommonUtils","exports","isValidNumber","num","isNumber","isNaN","isNotInfinity","isFinite","getArrayOfNumbers","start","result","i","end","push","intArraySort","arr","direction","desc","a","b","sort","getIntArr","length","_getIntArr","concat","DateUtils","getVal","datetime","method","date","Date","call","getDay","prototype","getUTCDate","getDate","getDayOfWeek","getUTCDay","getYear","getUTCFullYear","getFullYear","getMonth","getUTCMonth","getDaysInMonth","month","year","isValidModel","model","isDateUpperStartLimit","dt","startLimitTime","isDateLowerEndLimit","endLimitTime","isDateBetweenLimits","LimitsModel","startDt","endDt","_setStart","d","m","y","this","_setEnd","_setNow","getTime","now","DateModel","day","dayOfWeek","timezone","getTimezoneOffset","YearsUtils","getYearsList","startDateTime","endDateTime","DEFAULT_YEARS_COUNT","startDate","endDate","nowDate","selectedYear","selected","latestPossibleYear","firstPossibleYear","yearsListDirection","MonthUtils","getMonthList","START_MONTH","END_MONTH","isYearOfLowerLimit","isYearOfUpperLimit","monthListDirection","DaysUtils","getDaysList","selectedMonth","START_DAY","lastDayInMonth","DataClass","isMonthOfLowerLimit","isMonthOfUpperLimit","isLowerLimit","isUpperLimit","daysListDirection","_getSelected","isBiggerThenStart","isEqualToStart","isLowerThenEnd","isEqualToEnd","_private","_start","_end","current","reloadYearsList","reloadMonthList","reloadDaysList","_limitDates","angularView","directive","restrict","replace","templateUrl","scope","ngModel","apdStart","apdEnd","apdDayId","apdMonthId","apdYearId","apdDayClasses","apdMonthClasses","apdYearClasses","apdLocalization","apdIsUtc","link","getLimitSafeDatetime","settings","updateModel","ngModelWatcher","stop","data","onModelChange","oldValue","getInitDateModel","initDatetime","isInitModelValid","limitSafeDatetime","_initData","initDateModel","handler","callback","$watch","value","onDaySelectChanged","onMonthSelectChanged","onYearSelectChanged","getDayName","week","getName","getMonthName"],"mappings":"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","file":"angular-pure-datepicker.min.js","sourcesContent":["angular.module(\"angular-pd.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"apd.html\",\"<div class=apd_root><select ng-model=data.selected.day ng-options=\\\"day for day in data.days\\\" ng-init=\\\"data.selected.day = data.days[0]\\\" ng-change=onDaySelectChanged(data.selected.day) id={{::apdDayId}} class=\\\"apd_elem apd_select_day apd_select {{::apdDayClasses}}\\\"></select><span ng-bind=getDayName(data.selected.dayOfWeek) class=\\\"apd_elem apd_day_of_week\\\"></span><select ng-model=data.selected.month ng-options=\\\"getMonthName(month) for month in data.month\\\" ng-init=\\\"data.selected.month = data.month[0]\\\" ng-change=onMonthSelectChanged(data.selected.month) id={{::apdMonthId}} class=\\\"apd_elem apd_select_month apd_select {{::apdMonthClasses}}\\\"></select><select ng-model=data.selected.year ng-options=\\\"year for year in data.years\\\" ng-init=\\\"data.selected.year = data.years[0]\\\" ng-change=onYearSelectChanged(data.selected.year) id={{::apdYearId}} class=\\\"apd_elem apd_select_year apd_select {{::apdYearClasses}}\\\"></select></div>\");}]);\n'use strict';\n\nvar Settings = {\n    isUtc: false,\n    monthDirection: 'asc',\n    daysDirection: 'asc',\n    yearsDirection: 'desc',\n    daysList: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    monthList: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar CommonUtils = (function () {\n    'use strict';\n\n    var exports = {\n        isValidNumber: function (num) {\n            var isNumber = !isNaN(num);\n            var isNotInfinity = isFinite(num);\n            return isNumber && isNotInfinity;\n        },\n        getArrayOfNumbers: function (start) {\n            var result = [];\n\n            for (var i = start; i <= end; i++) {\n                result.push(i);\n            }\n\n            return result;\n        },\n        intArraySort: function (arr, direction) {\n            function desc(a, b) {\n                return b - a;\n            }\n\n            switch (direction) {\n                default:\n                    return arr.sort(function (a, b) {\n                        return a - b;\n                    });\n                case \"desc\":\n                    return arr.sort(desc);\n            }\n        },\n        getIntArr: function (length) {\n            if (!length && length !== 0) return;\n            return length ? exports._getIntArr(length - 1).concat(length) : [];\n        }\n    };\n\n    return exports;\n})();\nvar DateUtils = (function (Settings) {\n    'use strict';\n\n    function getVal(datetime, method) {\n        var date = new Date(datetime);\n        return method.call(date);\n    }\n\n    var exports = {\n        getDay: function (datetime) {\n            var method = (Settings.isUTC) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return getVal(datetime, method);\n        },\n        getDayOfWeek: function (datetime) {\n            var method = (Settings.isUTC) ? Date.prototype.getUTCDay : Date.prototype.getDay;\n            return getVal(datetime, method);\n        },\n        getYear: function (datetime) {\n            var method = (Settings.isUTC) ? Date.prototype.getUTCFullYear : Date.prototype.getFullYear;\n            return getVal(datetime, method);\n        },\n        getMonth: function (datetime) {\n            var method = (Settings.isUTC) ? Date.prototype.getUTCMonth : Date.prototype.getMonth;\n            return getVal(datetime, method);\n        },\n        getDaysInMonth: function (month, year) {\n            return new Date(year, month + 1, 0).getDate();\n        },\n        isValidModel: function (model) {\n            return !!model && (!!model.datetime || model.datetime === 0);\n        },\n        isDateUpperStartLimit: function (dt, startLimitTime) {\n            if (!startLimitTime) return true;\n            return (dt > startLimitTime);\n        },\n        isDateLowerEndLimit: function (dt, endLimitTime) {\n            if (!endLimitTime) return true;\n            return (dt < endLimitTime);\n        },\n        isDateBetweenLimits: function (dt, startLimitTime, endLimitTime) {\n            return (exports.isDateUpperStartLimit(dt, startLimitTime) && exports.isDateLowerEndLimit(dt, endLimitTime));\n        }\n    };\n\n    return exports;\n})(Settings);\nvar LimitsModel = (function (DateUtils) {\n    'use strict';\n\n    function LimitsModel(startDt, endDt) {\n\n        var exports = {\n            start: {},\n            end: {},\n            now: {}\n        };\n\n        function _setStart(dt) {\n            exports.start.d = DateUtils.getDay(dt);\n            exports.start.m = DateUtils.getMonth(dt);\n            exports.start.y = DateUtils.getYear(dt);\n            exports.start.dt = dt;\n            return this;\n        }\n\n        function _setEnd(dt) {\n            exports.end.d = DateUtils.getDay(dt);\n            exports.end.m = DateUtils.getMonth(dt);\n            exports.end.y = DateUtils.getYear(dt);\n            exports.end.dt = dt;\n            return this;\n        }\n\n        function _setNow() {\n            var dt = new Date().getTime();\n            exports.now.d = DateUtils.getDay(dt);\n            exports.now.m = DateUtils.getMonth(dt);\n            exports.now.y = DateUtils.getYear(dt);\n            exports.now.dt = dt;\n            return this;\n        }\n\n        _setStart(startDt);\n        _setEnd(endDt);\n        _setNow();\n        \n        return exports;\n    }\n    \n    return LimitsModel;\n})(DateUtils);\nvar DateModel = (function (DateUtils) {\n    'use strict';\n\n    function DateModel(datetime) {\n        this.day = DateUtils.getDay(datetime);\n        this.dayOfWeek = DateUtils.getDayOfWeek(datetime);\n        this.month = DateUtils.getMonth(datetime);\n        this.year = DateUtils.getYear(datetime);\n        this.datetime = datetime;\n        this.timezone = new Date(datetime).getTimezoneOffset();\n\n        return this;\n    }\n\n    return DateModel;\n})(DateUtils);\nvar YearsUtils = (function (LimitsModel, DateUtils, CommonUtils) {\n    'use strict';\n\n    var exports = {\n        getYearsList: function (startDateTime, endDateTime) {\n            var result = [];\n            var DEFAULT_YEARS_COUNT = 10;\n\n            var start = LimitsModel.startDate.year;\n            var end = LimitsModel.endDate.year;\n            var now = LimitsModel.nowDate.year;\n            var selectedYear = DateUtils.getYear(this.selected.datetime);\n            var latestPossibleYear = (selectedYear > now) ? selectedYear : now;\n            var firstPossibleYear = (selectedYear < now) ? selectedYear : now;\n            latestPossibleYear = latestPossibleYear + (DEFAULT_YEARS_COUNT - 1);\n            firstPossibleYear = firstPossibleYear - (DEFAULT_YEARS_COUNT - 1);\n\n            //start = 2011, end = 2014\n            if ((startDateTime && endDateTime) && (startDateTime < endDateTime)) {\n                result = CommonUtils.getArrayOfNumbers(start, end);\n            }\n\n            //start = 2014, end = 2011\n            else if ((startDateTime && endDateTime) && (startDateTime > endDateTime)) {\n                result = CommonUtils.getArrayOfNumbers(end, start);\n            }\n\n            //start = 2011, end = 2011\n            else if ((startDateTime && endDateTime) && (startDateTime === endDateTime)) {\n                result = CommonUtils.getArrayOfNumbers(start, end);\n            }\n\n            //start = 2014, end = null\n            else if (startDateTime && !endDateTime) {\n                result = CommonUtils.getArrayOfNumbers(start, latestPossibleYear);\n            }\n\n            //start = null, end = 2014\n            else if (!startDateTime && endDateTime) {\n                //now = 2013 (or 2014),  end = 2014\n                if (LimitsModel.endDate.year >= LimitsModel.nowDate.year) {\n\n                    if ((firstPossibleYear - DEFAULT_YEARS_COUNT) > (end - DEFAULT_YEARS_COUNT)) {\n                        result = CommonUtils.getArrayOfNumbers(firstPossibleYear, end);\n                    } else {\n                        result = CommonUtils.getArrayOfNumbers(end - (DEFAULT_YEARS_COUNT - 1), end);\n                    }\n\n                }\n                //now = 2015,  end = 2014\n                else if (LimitsModel.endDate.year > LimitsModel.nowDate.year) {\n                    result = CommonUtils.getArrayOfNumbers(end - (DEFAULT_YEARS_COUNT - 1), end);\n                }\n\n            }\n\n            //start = null, end = null\n            else if (!startDateTime && !endDateTime) {\n                result = CommonUtils.getArrayOfNumbers(firstPossibleYear, latestPossibleYear);\n            }\n\n            return CommonUtils.intArraySort(result, Settings.yearsListDirection);\n        }\n    };\n\n    return exports;\n})(LimitsModel, DateUtils, CommonUtils);\nvar MonthUtils = (function (LimitsModel, DateUtils, CommonUtils) {\n    'use strict';\n\n    var exports = {\n        getMonthList: function (startDateTime, endDateTime, selectedYear) {\n            var result;\n            var START_MONTH = 0;\n            var END_MONTH = 11;\n\n            //TODO (S.Panfilov)  check\n            if (startDateTime || endDateTime) {\n                var isYearOfLowerLimit = (startDateTime) ? LimitsModel.startDate.year === selectedYear : false;\n                var isYearOfUpperLimit = (endDateTime) ? LimitsModel.endDate.year === selectedYear : false;\n                var start = (startDateTime) ? LimitsModel.startDate.month : START_MONTH;\n                var end = (endDateTime) ? LimitsModel.endDate.month : END_MONTH;\n\n                // startYear == 2015, nowYear == 2015, endYear == 2015\n                if (isYearOfLowerLimit && isYearOfUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, end);\n                }\n                // startYear == 2015, nowYear == 2015, endYear == 2016 (or null)\n                else if (isYearOfLowerLimit && !isYearOfUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, END_MONTH);\n                }\n                // startYear == 2014 (or null), nowYear == 2015, endYear == 2015\n                else if (!isYearOfLowerLimit && isYearOfUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(START_MONTH, end);\n                }\n                else {\n                    // in all other cases return array of 12 month\n                    result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n                }\n            } else {\n                // in all other cases return array of 12 month\n                result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n            }\n\n            return CommonUtils.intArraySort(result, Settings.monthListDirection);\n        }\n    };\n\n    return exports;\n})(LimitsModel, DateUtils, CommonUtils);\nvar DaysUtils = (function (LimitsModel, DateUtils, CommonUtils) {\n    'use strict';\n\n    var exports = {\n        getDaysList: function (startDateTime, endDateTime, selectedYear, selectedMonth) {\n            var result;\n            var START_DAY = 1;\n            var lastDayInMonth = DataClass.getDaysInMonth(selectedMonth, selectedYear);\n\n            //TODO (S.Panfilov)  check\n            if (startDateTime || endDateTime) {\n                var isYearOfLowerLimit = (startDateTime) ? LimitsModel.startDate.year === selectedYear : false;\n                var isYearOfUpperLimit = (endDateTime) ? LimitsModel.endDate.year === selectedYear : false;\n                var isMonthOfLowerLimit = (startDateTime) ? LimitsModel.startDate.month === selectedMonth : false;\n                var isMonthOfUpperLimit = (endDateTime) ? LimitsModel.endDate.month === selectedMonth : false;\n\n                var isLowerLimit = (isYearOfLowerLimit && isMonthOfLowerLimit);\n                var isUpperLimit = (isYearOfUpperLimit && isMonthOfUpperLimit);\n\n                var start = (startDateTime) ? LimitsModel.startDate.day : START_DAY;\n                var end = (endDateTime) ? LimitsModel.endDate.day : lastDayInMonth;\n\n                if (isLowerLimit && isUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, end);\n                } else if (isLowerLimit && !isUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, lastDayInMonth);\n                } else if (!isLowerLimit && isUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(START_DAY, end);\n                } else {\n                    // in all other cases return array of 12 month\n                    result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n                }\n            } else {\n                // in all other cases return array of 12 month\n                result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n            }\n\n            return CommonUtils.intArraySort(result, Settings.daysListDirection);\n        }\n    };\n\n    return exports;\n})(LimitsModel, DateUtils, CommonUtils);\nvar DataClass = (function (DateUtils, CommonUtils, YearsUtils, MonthUtils, DaysUtils, DateModel) {\n    'use strict';\n\n    function _getSelected(selected, startDateTime, endDateTime) {\n        var result;\n\n        var isBiggerThenStart = (selected.dt > startDateTime);\n        var isEqualToStart = (selected.dt === startDateTime);\n        var isLowerThenEnd = (selected.dt > endDateTime);\n        var isEqualToEnd = (selected.dt === endDateTime);\n\n        //start == 1; selected == 1 or 2 or 3; end == 3;\n        if ((isBiggerThenStart || isEqualToStart) || (isLowerThenEnd || isEqualToEnd)) {\n            result = new DateModel(selected.dt);\n        } else\n        //start == 1; selected == 0\n        if (!isBiggerThenStart) {\n            result = new DateModel(startDateTime);\n        } else\n        //selected == 4; end == 3;\n        if (!isBiggerThenStart) {\n            result = new DateModel(endDateTime);\n        }\n        //paranoid case\n        else {\n            result = new DateModel(new Date().getTime());\n        }\n\n        return result;\n    }\n\n    return function (selected, startDateTime, endDateTime) {\n\n        var _private = {\n            _start: null,\n            _end: null\n        };\n\n        var exports = {\n            selected: {},\n            current: {\n                y: null,\n                m: null,\n                d: null\n            },\n            reloadYearsList: function () {\n                exports.current.y = YearsUtils.getYearsList(_private._start, _private._end);\n                return this;\n            },\n            reloadMonthList: function () {\n                var selectedYear = DateUtils.getYear(exports.selected.dt);\n                exports.current.m = MonthUtils.getMonthList(_private._start, _private._end, selectedYear);\n                return this;\n            },\n            reloadDaysList: function () {\n                var selectedYear = DateUtils.getYear(exports.selected.dt);\n                var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n                exports.current.d = DaysUtils.getDaysList(_private._start, _private._end, selectedYear, selectedMonth);\n                return this;\n            }\n        };\n\n        selected.dt = CommonUtils.isValidNumber(selected.dt) ? selected.dt : null;\n        startDateTime = CommonUtils.isValidNumber(startDateTime) ? startDateTime : null;\n        endDateTime = CommonUtils.isValidNumber(endDateTime) ? endDateTime : null;\n\n        exports.selected = _getSelected(selected, startDateTime, endDateTime);\n        var selectedYear = DateUtils.getYear(exports.selected.dt);\n        var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n\n        this._limitDates = new LimitsModel(startDateTime, endDateTime);\n        _private._start = startDateTime;\n        _private._end = endDateTime;\n        exports.current.y = YearsUtils.getYearsList(startDateTime, endDateTime);\n        exports.current.m = MonthUtils.getMonthList(startDateTime, endDateTime, selectedYear);\n        exports.current.d = DaysUtils.getDaysList(startDateTime, endDateTime, selectedYear, selectedMonth);\n\n        return this;\n    }\n\n})(DateUtils, CommonUtils, YearsUtils, MonthUtils, DaysUtils, DateModel);\nvar angularView = (function (DateUtils, DataClass) {\n    'use strict';\n\n\n    angular.module('angular-pd', [\n        'angular-pd.templates'\n    ])\n\n        .directive('pureDatepicker', function () {\n            return {\n                restrict: 'E',\n                replace: true,\n                templateUrl: 'apd.html',\n                scope: {\n                    ngModel: '=',\n                    apdStart: '=?',\n                    apdEnd: '=?',\n                    apdDayId: '@?',\n                    apdMonthId: '@?',\n                    apdYearId: '@?',\n                    apdDayClasses: '@?',\n                    apdMonthClasses: '@?',\n                    apdYearClasses: '@?',\n                    apdLocalization: '=?',\n                    apdIsUtc: '=?'\n                },\n                link: function (scope) {\n\n                    scope.apdIsUtc = scope.apdIsUtc || false;\n\n                    //TODO (S.Panfilov) check for cross-browser support\n                    //TODO (S.Panfilov) may be should add tests\n                    var settings = {\n                        initDateModel: null,\n                        startDateTime: null,\n                        endDateTime: null\n                    };\n\n                    var ngModelWatcher = {\n                        handler: null,\n                        start: function (callback) {\n                            ngModelWatcher.handler = scope.$watch('ngModel.datetime', function (value, oldValue) {\n                                if (callback) {\n                                    callback(value, oldValue)\n                                }\n\n                            }, true);\n                        },\n                        stop: function () {\n                            ngModelWatcher.handler();\n                            return true;\n                        }\n                    };\n\n\n                    function getLimitSafeDatetime(day, month, year) {\n\n                        var datetime = new Date(year, month, day).getTime();\n\n                        if (!DateUtils.isDateBetweenLimits(datetime, settings.startDateTime, settings.endDateTime)) {\n                            if (!DateUtils.isDateUpperStartLimit(datetime, settings.startDateTime)) {\n                                datetime = settings.startDateTime;\n                            } else if (!DateUtils.isDateLowerEndLimit(datetime, settings.endDateTime)) {\n                                datetime = settings.endDateTime;\n                            }\n                        }\n\n                        return datetime;\n                    }\n\n                    function updateModel(datetime) {\n                        ngModelWatcher.stop();\n                        scope.data.selected = new DateModel(datetime, scope.apdIsUtc);\n                        scope.ngModel = scope.data.selected;\n                        ngModelWatcher.start(onModelChange);\n                    }\n\n                    function onModelChange(datetime, oldValue) {\n                        if (datetime === oldValue) {\n                            return;\n                        }\n\n                        var day = DateUtils.getDay(datetime, scope.apdIsUtc);\n                        var month = DateUtils.getMonth(datetime, scope.apdIsUtc);\n                        var year = DateUtils.getYear(datetime, scope.apdIsUtc);\n\n                        datetime = getLimitSafeDatetime(day, month, year);\n                        updateModel(datetime);\n\n                        scope.data.reloadYearsList();\n                        scope.data.reloadMonthList();\n                        scope.data.reloadDaysList();\n                    }\n\n                    function getInitDateModel(model) {\n                        var isInitModelValid = DateUtils.isValidModel(model);\n                        var initDatetime;\n\n                        if (isInitModelValid) {\n                            initDatetime = model.datetime\n                        } else {\n                            initDatetime = new Date().getTime();\n                        }\n\n                        var day = DateUtils.getDay(initDatetime, scope.apdIsUtc);\n                        var month = DateUtils.getMonth(initDatetime, scope.apdIsUtc);\n                        var year = DateUtils.getYear(initDatetime, scope.apdIsUtc);\n\n                        var limitSafeDatetime = getLimitSafeDatetime(day, month, year);\n\n                        return new DateModel(limitSafeDatetime, scope.apdIsUtc);\n                    }\n\n                    function _initData(initDateModel, startDateTime, endDateTime) {\n                        scope.data = new DataClass(initDateModel, startDateTime, endDateTime, scope.apdIsUtc);\n                        scope.ngModel = scope.data.selected;\n                    }\n\n\n                    scope.onDaySelectChanged = function (day) {\n                        if (!day) return;\n\n                        var datetime = getLimitSafeDatetime(scope.data.selected.day, scope.data.selected.month, scope.data.selected.year);\n                        updateModel(datetime);\n                    };\n\n                    scope.onMonthSelectChanged = function (month) {\n                        if (!month && month !== 0) return;\n\n                        var datetime;\n                        var year = scope.data.selected.year;\n                        var day = scope.data.selected.day;\n\n                        datetime = getLimitSafeDatetime(day, month, year);\n                        updateModel(datetime);\n\n                        scope.data.reloadDaysList();\n                    };\n\n                    scope.onYearSelectChanged = function (year) {\n                        if (!year && year !== 0) return;\n\n                        var month = scope.data.selected.month;\n                        var day = scope.data.selected.day;\n\n                        var datetime = getLimitSafeDatetime(day, month, year);\n                        updateModel(datetime);\n\n                        scope.data.reloadMonthList();\n                        scope.data.reloadDaysList();\n                    };\n\n                    (function _init() {\n                        settings.startDateTime = (scope.apdStart) ? +scope.apdStart : null;\n                        settings.endDateTime = (scope.apdEnd) ? +scope.apdEnd : null;\n                        settings.initDateModel = getInitDateModel(scope.ngModel);\n                        _initData(settings.initDateModel, settings.startDateTime, settings.endDateTime);\n\n                        var localization = scope.apdLocalization || null;\n                        //var week = new DaysClass(localization);\n                        //var year = new MonthClass(localization);\n                        scope.getDayName = week.getName;\n                        scope.getMonthName = year.getName;\n\n                        ngModelWatcher.start(onModelChange);\n                    })();\n\n                }\n            }\n        });\n})(DateUtils, DataClass);"],"sourceRoot":"/source/"}