"use strict";
var Settings = {
    isUtc: !1,
    monthDirection: "asc",
    daysDirection: "asc",
    yearsDirection: "desc",
    daysList: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    monthList: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
}, CommonUtils = function () {
    var t = {
        isValidNumber: function (t) {
            var e = !isNaN(t), r = isFinite(t);
            return e && r
        }, getArrayOfNumbers: function (t) {
            for (var e = [], r = t; r <= end; r++)e.push(r);
            return e
        }, intArraySort: function (t, e) {
            function r(t, e) {
                return e - t
            }

            switch (e) {
                default:
                    return t.sort(function (t, e) {
                        return t - e
                    });
                case"desc":
                    return t.sort(r)
            }
        }, getIntArr: function (e) {
            return e || 0 === e ? e ? t._getIntArr(e - 1).concat(e) : [] : void 0
        }
    };
    return t
}(), DateUtils = function (t) {
    function e(t, e) {
        var r = new Date(t);
        return e.call(r)
    }

    var r = {
        getDay: function (r) {
            var a = t.isUTC ? Date.prototype.getUTCDate : Date.prototype.getDate;
            return e(r, a)
        }, getDayOfWeek: function (r) {
            var a = t.isUTC ? Date.prototype.getUTCDay : Date.prototype.getDay;
            return e(r, a)
        }, getYear: function (r) {
            var a = t.isUTC ? Date.prototype.getUTCFullYear : Date.prototype.getFullYear;
            return e(r, a)
        }, getMonth: function (r) {
            var a = t.isUTC ? Date.prototype.getUTCMonth : Date.prototype.getMonth;
            return e(r, a)
        }, getDaysInMonth: function (t, e) {
            return new Date(e, t + 1, 0).getDate()
        }
    };
    return r
}(Settings), LimitsModel = function (t) {
    function e(e, r) {
        function a(e) {
            return s.start.d = t.getDay(e), s.start.m = t.getMonth(e), s.start.y = t.getYear(e), s.start.dt = e, this
        }

        function n(e) {
            return s.end.d = t.getDay(e), s.end.m = t.getMonth(e), s.end.y = t.getYear(e), s.end.dt = e, this
        }

        function i() {
            var e = (new Date).getTime();
            return s.now.d = t.getDay(e), s.now.m = t.getMonth(e), s.now.y = t.getYear(e), s.now.dt = e, this
        }

        var s = {
            start: {}, end: {}, now: {}, isDateUpperStartLimit: function (t, e) {
                return e ? t > e : !0
            }, isDateLowerEndLimit: function (t, e) {
                return e ? e > t : !0
            }, isDateBetweenLimits: function (t, e, r) {
                return s.isDateUpperStartLimit(t, e) && s.isDateLowerEndLimit(t, r)
            }
        };
        return a(e), n(r), i(), s
    }

    return e
}(DateUtils), DateModel = function (t) {
    function e(e) {
        return this.day = t.getDay(e), this.dayOfWeek = t.getDayOfWeek(e), this.month = t.getMonth(e), this.year = t.getYear(e), this.datetime = e, this.timezone = new Date(e).getTimezoneOffset(), this
    }

    return e
}(DateUtils), YearsUtils = function (t, e, r) {
    var a = {
        getYearsList: function (a, n) {
            var i = [], s = 10, o = t.startDate.year, u = t.endDate.year, D = t.nowDate.year, y = e.getYear(this.selected.datetime), m = y > D ? y : D, g = D > y ? y : D;
            return m += s - 1, g -= s - 1, a && n && n > a ? i = r.getArrayOfNumbers(o, u) : a && n && a > n ? i = r.getArrayOfNumbers(u, o) : a && n && a === n ? i = r.getArrayOfNumbers(o, u) : a && !n ? i = r.getArrayOfNumbers(o, m) : !a && n ? t.endDate.year >= t.nowDate.year ? i = g - s > u - s ? r.getArrayOfNumbers(g, u) : r.getArrayOfNumbers(u - (s - 1), u) : t.endDate.year > t.nowDate.year && (i = r.getArrayOfNumbers(u - (s - 1), u)) : a || n || (i = r.getArrayOfNumbers(g, m)), r.intArraySort(i, Settings.yearsListDirection)
        }
    };
    return a
}(LimitsModel, DateUtils, CommonUtils), MonthUtils = function (t, e, r) {
    var a = {
        getMonthList: function (e, a, n) {
            var i, s = 0, o = 11;
            if (e || a) {
                var u = e ? t.startDate.year === n : !1, D = a ? t.endDate.year === n : !1, y = e ? t.startDate.month : s, m = a ? t.endDate.month : o;
                i = u && D ? r.getArrayOfNumbers(y, m) : u && !D ? r.getArrayOfNumbers(y, o) : !u && D ? r.getArrayOfNumbers(s, m) : r.getArrayOfNumbers(s, o)
            } else i = r.getArrayOfNumbers(s, o);
            return r.intArraySort(i, Settings.monthListDirection)
        }
    };
    return a
}(LimitsModel, DateUtils, CommonUtils), DaysUtils = function (t, e, r) {
    var a = {
        getDaysList: function (e, a, n, i) {
            var s, o = 1, u = DataClass.getDaysInMonth(i, n);
            if (e || a) {
                var D = e ? t.startDate.year === n : !1, y = a ? t.endDate.year === n : !1, m = e ? t.startDate.month === i : !1, g = a ? t.endDate.month === i : !1, d = D && m, f = y && g, c = e ? t.startDate.day : o, h = a ? t.endDate.day : u;
                s = d && f ? r.getArrayOfNumbers(c, h) : d && !f ? r.getArrayOfNumbers(c, u) : !d && f ? r.getArrayOfNumbers(o, h) : r.getArrayOfNumbers(o, u)
            } else s = r.getArrayOfNumbers(o, u);
            return r.intArraySort(s, Settings.daysListDirection)
        }
    };
    return a
}(LimitsModel, DateUtils, CommonUtils), DataClass = function (t, e, r, a, n, i) {
    _getSelected = function (t, e, r) {
        var a, n = t.datetime > e, s = t.datetime === e, o = t.datetime > r, u = t.datetime === r;
        return a = new i(n || s || o || u ? t.datetime : n ? n ? (new Date).getTime() : r : e)
    }, reloadYearsList = function () {
        return this.years = r.getYearsList(this._startDateTime, this._endDateTime), this
    }, reloadMonthList = function () {
        var e = t.getYear(this.selected.datetime);
        return this.month = a.getMonthList(this._startDateTime, this._endDateTime, e), this
    }, reloadDaysList = function () {
        var e = t.getYear(this.selected.datetime), r = t.getMonth(this.selected.datetime);
        return this.days = n.getDaysList(this._startDateTime, this._endDateTime, e, r), this
    }
}(DateUtils, CommonUtils, YearsUtils, MonthUtils, DaysUtils, DateModel);
//# sourceMappingURL=angular-pure-datepicker.min.js.map